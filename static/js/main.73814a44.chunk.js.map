{"version":3,"sources":["components/implementations/subComponents/Arrow.js","components/implementations/subComponents/NeuralNetworkComponent.js","components/implementations/subComponents/ScatterPlot.js","components/implementations/subComponents/AnimatedScatterPlot.js","components/implementations/subComponents/Loss.js","components/implementations/article/Typeset.js","components/implementations/article/ContourLoss.js","components/implementations/article/assets/autoKey.svg","components/implementations/article/AutoTool.js","components/implementations/article/ManualTool.js","components/implementations/article/assets/summary.svg","components/implementations/article/NestedFunction.js","components/implementations/article/ToggleForward.js","components/implementations/article/assets/diagramSVG/forward-key.svg","components/implementations/article/assets/diagramSVG/forward.svg","components/implementations/article/assets/diagramSVG/forwardComputation.svg","components/implementations/article/assets/diagramSVG/backward-key.svg","components/implementations/article/assets/diagramSVG/backward.svg","components/implementations/article/assets/diagramSVG/backwardComputation.svg","components/implementations/article/assets/contour-explain.svg","components/implementations/article/assets/gd-explain.svg","components/implementations/article/assets/headerTitle.svg","components/implementations/mainComponent/assets/singleSummary.svg","components/implementations/mainComponent/assets/epochMode.png","components/implementations/mainComponent/assets/key.svg","nnMiniLibrary/implementations/Neuron.js","nnMiniLibrary/implementations/Loss.js","nnMiniLibrary/implementations/NeuralNetwork.js","nnMiniLibrary/implementations/Tools.js","Utils/implementations/Draw.js","components/implementations/mainComponent/BackpropExplainer.js","components/implementations/article/assets/demo.gif","pages/NewPage.js","pages/auto_fit_linear.js","pages/backprop.js","pages/manual_fit.js","App.js","reportWebVitals.js","index.js"],"names":["Arrow","source","target","color","isAnimating","id","orient","markerWidth","markerHeight","refX","refY","d","fill","className","markerEnd","stroke","x","y","NeuralNetworkComponent","props","isUndefined","val","isUndefined3d","array3d","i","j","k","VerticalArrow","xStart","yStart","length","dirIsUp","vector","subEpoch","playing","mode","shapedLinks","shapedWeights","shapedRects","miniNN","keyFrameLoss","keyFrameLayer","lr","colorOfMotion","graphConnectionColor","squareWidth","link","d3","nn","width","height","overflow","map","layer","neuron","moving","colorChange","currentWeight","sw","Math","abs","s","gradient","model","dWeights","gradientWithLr","select","transition","duration","ease","attr","strokeWidth","actColor","beforeUpdate","brighter","actStep","dActStep","fontFamily","fontSize","ScatterPlot","node","formattedPoints","selectAll","data","enter","append","_","style","start","stop","padding","xScale","domain","range","yScale","a","this","container","svg","generateScales","xAxis","scale","yAxis","call","X","yhat","dataSet","curve","push","remove","plotPoints","Component","AnimatedScatterPlot","pointValue","isSelected","index","selectIndex","selectStyle","defaultStyle","text","toFixed","array1","array2","potential","realYhat","zeroArray","potentialYhat","xNum","line","status","animateLineChange","updateAll","shouldNotRender","Loss","ticks","lossArray","lossMin","lossMax","$","inlineLaTeX","math","addAxes","updateLines","m","b","mStroke","bStroke","updateLossText","hidden","textColor","rectFillColor","rectX","rectY","ContourLoss","state","loss","bind","summed","pow","darkness","n","values","Array","ms","bs","tempM","tempB","outputLoss","msExtrema","bsExtrema","getMin","extrema","getMax","thresholds","contours","size","join","value","wColor","bColor","newM","mTransform","newB","bTransform","paddingLeft","paddingTop","textAnchor","orange","blue","SubTool","playButton","linreg","meanSquaredError","rsquared","hyperparams","learningRate","epochs","speed","tunableparams","generateData","linearRegression","handleSlider","reset","setState","tf","yTensor","mean","dataSync","XTensor","yPred","h","len","shape","dlossdm","dlossdb","lossValue","y_pred","from","timer","Promise","res","setTimeout","upperBounds","changeSpeed","event","nullNumber","num","precision","Box","display","justifyContent","marginTop","marginRight","Card","variant","CardContent","Typography","component","margin","IconButton","onClick","Replay","Fab","background","disableTouchRipple","PlayArrow","Stop","SlowMotionVideo","isFinite","LinearScatter","weight","bias","show","biasColor","weightColor","lossColor","y_predTensor","output","array","increment","initDomain","initRange","computeLine","initLine","dataGenerator","filter","marginLeft","Slider","onChange","e","newLine","min","step","max","valueLabelDisplay","Neuron","weights","item","dvalues","oppositeParameter","mult","reduce","dvalue","numInputs","dSumArray","input","inputs","activation","sum","multStep","sumStep","dSum","dSumStep","dBias","dInputs","dInputsSum","MeanSquaredErrorLoss","subStep","squareStep","NeuralNetwork","biases","dense","array1Length","array2Length","console","error","result","label","lastLayer","outputs","forward","ReLU","linear","add","zeros","backward","dValues","dLinear","dReLU","gd","dweight","newWeights","newBias","formatWeightArray","uweights","l","weightSet","t","w","toFunc2DArray","arr","fixed","flatten","flattendArray","getRandomInt","floor","random","tensorToArray","tensor","generateLinearScale","generateLink","adjustment","generateNeuronPlacement","layerProportion","startNeuron","stopNeuron","shapedNeurons","coordinate","generateLinksPlacement","linksGenerator","perLink","layerLinks","neuronLinks","nextNeuron","BackpropExplainer","tensorFlowNN","epoch","cpyEpoch","biasesData","weightsData","direction","controls","stopRender","keyFrameScatter","lossSavings","lossDifference","singleInputExample","singleLabelExample","newOutput","controlCenterHelp","customizationHelp","neuralNetworkHelp","lossChange","singleInputIndex","zoom","initNeuralNetwork","run","genTensorData","mutate","train","printParameters","resetParameters","asyncPause","changeModelLr","anim","randExampleEpoch","randomInput","tools","formattedWeights","clone","update","updatedLoss","inputArray","inputArrayLength","outputArray","forwardAll","draw","splice","lrChange","key","subkey","inputShape","units","useBias","addModel","compile","optimizer","sgd","play","fit","batchSize","yhatTensor","predict","eqn","scaled","volume","getWeights","modelCompile","zoomFactor","document","body","clientWidth","correctZoom","dataSets","PlayButtonClick","controlsReg","CardActions","Tooltip","title","arrow","disabled","FastForward","controlsBackProp","Button","borderColor","controlCenter","Help","toPrecision","formatValue","ArrowBackIos","Chip","scatter","times","neuralNetwork","position","bottom","left","dialogs","Dialog","PaperProps","backgroundColor","open","DialogActions","Close","DialogContent","marginBottom","alt","src","epochModePNG","Summary","singleSummarySVG","outlineColor","paddingBottom","transform","keySVG","NewPage","name","AutoFitLinear","AutoTool","BackProp","ManualFit","ManualTool","globalWeight","theme","createMuiTheme","overrides","MuiTypography","h1","fontWeight","h2","h3","h4","h5","h6","body1","body2","App","ReactGa","initialize","process","REACT_APP_GAID","pageview","ThemeProvider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.73814a44.chunk.js","sourcesContent":["/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tArrow.js is designed to simply draw a small colored arrow\n*/\n\nimport React from \"react\";\nimport \"../d3.css\";\nconst Arrow = ({ source, target, color, isAnimating }) => (\n\t<g>\n\t\t<defs>\n\t\t\t<marker\n\t\t\t\tid=\"head\"\n\t\t\t\torient=\"auto\"\n\t\t\t\tmarkerWidth=\"3\"\n\t\t\t\tmarkerHeight=\"4\"\n\t\t\t\trefX=\"0.1\"\n\t\t\t\trefY=\"2\"\n\t\t\t>\n\t\t\t\t<path d=\"M0,0 V4 L2,2 Z\" fill={color} />\n\t\t\t</marker>\n\t\t</defs>\n\t\t<path\n\t\t\tclassName={!isAnimating ? \"arrow\" : \"absorb\"}\n\t\t\tid=\"arrow-line\"\n\t\t\tmarkerEnd=\"url(#head)\"\n\t\t\tfill=\"none\"\n\t\t\tstroke={color}\n\t\t\td={`M${source.x},${source.y}, ${target.x}, ${target.y}`}\n\t\t/>\n\t</g>\n);\nexport default Arrow;\n","/* \n\tDonny Bertucci @xnought\n\tSummary: \n\t\tNeuralNetworkComponent.js is a compomnent that handles all neural network\n\t\tlogic for the backproptool neural network representation\n*/\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport Arrow from \"./Arrow\";\nimport \"../d3.css\";\n\nconst NeuralNetworkComponent = (props) => {\n\t/* \n\t\t@param val\n\t\t@return true if undefined\t\n\t*/\n\tconst isUndefined = (val) => typeof val === \"undefined\";\n\t/* \n\t\tcheck if the 3d array index is defined\n\t\t@param array3d, i, j , k\n\t\t@return returns true if one of the depths is undefined\t\n\t*/\n\tconst isUndefined3d = (array3d, i, j, k) => {\n\t\treturn (\n\t\t\tisUndefined(array3d[i]) ||\n\t\t\tisUndefined(array3d[i][j]) ||\n\t\t\tisUndefined(array3d[i][j][k])\n\t\t);\n\t};\n\t/* \n\t\t@param \txStart, yStart, length, dirIsUp, color\n\t\t@return <Arrow />\t\n\t*/\n\tconst VerticalArrow = (xStart, yStart, length, dirIsUp, color) => {\n\t\tconst vector = dirIsUp ? -length : length;\n\t\treturn (\n\t\t\t<Arrow\n\t\t\t\tsource={{ x: xStart, y: yStart }}\n\t\t\t\ttarget={{ x: xStart, y: yStart + vector }}\n\t\t\t\tcolor={color}\n\t\t\t\tisAnimating={subEpoch === \"transition\"}\n\t\t\t/>\n\t\t);\n\t};\n\t/* \n\t\tspandrel\n\t\t@return \"css class\"\n\t*/\n\tconst keyFrameLossCalc = () => {\n\t\tif (keyFrameLoss === 1) {\n\t\t\treturn \"edgeForward\";\n\t\t} else if (keyFrameLoss === 2) {\n\t\t\treturn \"edgeBackward\";\n\t\t} else {\n\t\t\treturn \"edgePaused\";\n\t\t}\n\t};\n\t/* Destructure props */\n\tconst {\n\t\tplaying,\n\t\tmode,\n\t\tshapedLinks,\n\t\tshapedWeights,\n\t\tshapedRects,\n\t\tminiNN,\n\t\tsubEpoch,\n\t\tkeyFrameLoss,\n\t\tkeyFrameLayer,\n\t\tlr,\n\t\tisAnimating,\n\t} = props;\n\t/* confgure how things will look */\n\tconst colorOfMotion = \"orange\";\n\tconst negWeight = \"#D62839\";\n\tconst posWeight = \"#4BA3C3\";\n\tconst graphConnectionColor = \"black\";\n\tconst squareWidth = 32;\n\tconst link = d3\n\t\t.linkHorizontal()\n\t\t.x((d) => d.x)\n\t\t.y((d) => d.y);\n\n\t/*  main nn nerual network composition */\n\tconst nn = (\n\t\t<svg id=\"p\" width=\"810\" height=\"500\" overflow=\"visible\">\n\t\t\t<g id=\"ee\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\tstroke={\n\t\t\t\t\t\tkeyFrameLoss === 2 || keyFrameLoss === 1\n\t\t\t\t\t\t\t? colorOfMotion\n\t\t\t\t\t\t\t: graphConnectionColor\n\t\t\t\t\t}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tmode && keyFrameLoss > 0 ? keyFrameLossCalc() : playing\n\t\t\t\t\t}\n\t\t\t\t></path>\n\n\t\t\t\t<path\n\t\t\t\t\td={link({\n\t\t\t\t\t\tsource: { x: 766, y: 315 },\n\t\t\t\t\t\ttarget: { x: 890, y: 430 },\n\t\t\t\t\t})}\n\t\t\t\t\tstroke={graphConnectionColor}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tclassName={playing}\n\t\t\t\t></path>\n\t\t\t\t<path\n\t\t\t\t\td={link({\n\t\t\t\t\t\tsource: { x: 766, y: 250 },\n\t\t\t\t\t\ttarget: { x: 890, y: 150 },\n\t\t\t\t\t})}\n\t\t\t\t\tstroke={graphConnectionColor}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tclassName={playing}\n\t\t\t\t></path>\n\t\t\t\t{shapedLinks.map((layer, i) => {\n\t\t\t\t\treturn layer.map((neuron, j) => {\n\t\t\t\t\t\t/* handle for change in layers */\n\t\t\t\t\t\tlet moving = \"edgePaused\";\n\t\t\t\t\t\tlet color = colorOfMotion;\n\t\t\t\t\t\tlet colorChange = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\tsubEpoch === \"forward\" &&\n\t\t\t\t\t\t\ti === keyFrameLayer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmoving = \"edgeForward\";\n\t\t\t\t\t\t\tcolorChange = true;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\tsubEpoch === \"backward\" &&\n\t\t\t\t\t\t\ti === keyFrameLayer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmoving = \"edgeBackward\";\n\t\t\t\t\t\t\tcolorChange = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn neuron.map((d, k) => {\n\t\t\t\t\t\t\t/* handle undefined outputs during re render */\n\t\t\t\t\t\t\tconst isUndefined = isUndefined3d(\n\t\t\t\t\t\t\t\tshapedWeights,\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tk\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst currentWeight = isUndefined\n\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t: shapedWeights[i][j][k];\n\t\t\t\t\t\t\tconst sw = isUndefined\n\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t: 2 * Math.abs(currentWeight) + 0.1;\n\t\t\t\t\t\t\tconst s = isUndefined\n\t\t\t\t\t\t\t\t? \"lightgrey\"\n\t\t\t\t\t\t\t\t: currentWeight > 0\n\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t: negWeight;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\tsubEpoch === \"update\" &&\n\t\t\t\t\t\t\t\tisAnimating === true\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlet gradient =\n\t\t\t\t\t\t\t\t\t2 * miniNN.model[i][j].dWeights[k];\n\t\t\t\t\t\t\t\tlet gradientWithLr = gradient * 0.01;\n\n\t\t\t\t\t\t\t\t/* Find a way to rework this later with non horrible names */\n\t\t\t\t\t\t\t\td3.select(\"#nn\")\n\t\t\t\t\t\t\t\t\t.select(\"#p\")\n\t\t\t\t\t\t\t\t\t.select(\"#ee\")\n\t\t\t\t\t\t\t\t\t.select(`#cpath${i}${j}${k}`)\n\t\t\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t\t\t.duration(750)\n\t\t\t\t\t\t\t\t\t.ease(d3.easeExpIn)\n\t\t\t\t\t\t\t\t\t.attr(\"stroke-width\", sw - gradient)\n\t\t\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t\t\t.duration(750)\n\t\t\t\t\t\t\t\t\t.ease(d3.easeExpOut)\n\t\t\t\t\t\t\t\t\t.attr(\"stroke-width\", sw - gradientWithLr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tid={`cpath${i}${j}${k}`}\n\t\t\t\t\t\t\t\t\tkey={`${i}${j}${k}`}\n\t\t\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\t\t\tclassName={mode ? moving : playing}\n\t\t\t\t\t\t\t\t\tstrokeWidth={sw}\n\t\t\t\t\t\t\t\t\tstroke={colorChange ? color : s}\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t})}\n\t\t\t\t<rect\n\t\t\t\t\tx={55}\n\t\t\t\t\ty={234}\n\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\theight={squareWidth}\n\t\t\t\t\tfill=\"darkgrey\"\n\t\t\t\t></rect>\n\n\t\t\t\t{shapedRects.map((neuron, i) =>\n\t\t\t\t\tneuron.map((d, j) => {\n\t\t\t\t\t\tlet actColor = false;\n\t\t\t\t\t\t/* handle for neurons and different times */\n\t\t\t\t\t\tconst beforeUpdate =\n\t\t\t\t\t\t\tsubEpoch === \"backward\" ||\n\t\t\t\t\t\t\tsubEpoch === \"transition\";\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(mode && i <= keyFrameLayer) ||\n\t\t\t\t\t\t\tbeforeUpdate ||\n\t\t\t\t\t\t\tsubEpoch === \"update\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactColor = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<g key={`${i},${j}`}>\n\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\t\t\t\t\theight={squareWidth}\n\t\t\t\t\t\t\t\t\tfill={\n\t\t\t\t\t\t\t\t\t\td.x === 734 && d.y === 234 && mode\n\t\t\t\t\t\t\t\t\t\t\t? \"#C6C6C6\"\n\t\t\t\t\t\t\t\t\t\t\t: d3\n\t\t\t\t\t\t\t\t\t\t\t\t\t.rgb(104, 104, 104)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.brighter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tactColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? miniNN.model[i][j]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.actStep +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlr\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\t\t\t\td.x === 734 && d.y === 234\n\t\t\t\t\t\t\t\t\t\t\t? \"#507BB6\"\n\t\t\t\t\t\t\t\t\t\t\t: \"black\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\t\t\t></rect>\n\n\t\t\t\t\t\t\t\t{miniNN !== null &&\n\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\tbeforeUpdate &&\n\t\t\t\t\t\t\t\ti >= keyFrameLayer - 1 &&\n\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep !== 0\n\t\t\t\t\t\t\t\t\t? VerticalArrow(\n\t\t\t\t\t\t\t\t\t\t\td.x + 16,\n\t\t\t\t\t\t\t\t\t\t\td.y + 16,\n\t\t\t\t\t\t\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep < 0,\n\t\t\t\t\t\t\t\t\t\t\tcolorOfMotion\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\n\t\t\t\t<rect\n\t\t\t\t\tx={734}\n\t\t\t\t\ty={300}\n\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\theight={squareWidth}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"black\"\n\t\t\t\t></rect>\n\t\t\t\t<text fontFamily=\"sans-serif\" fontSize=\"12px\" x={739} y={318}>\n\t\t\t\t\tloss\n\t\t\t\t</text>\n\t\t\t</g>\n\t\t</svg>\n\t);\n\treturn <div id=\"nn\">{nn}</div>;\n};\n\nexport default NeuralNetworkComponent;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tScatterPlot.js plot the points and the line on the graph\n*/\nimport React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass ScatterPlot extends Component {\n\t/* \n\t\tplot the points using d3\t\n\t*/\n\tplotPoints(node, formattedPoints, select) {\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", (_, i) => (i === select ? 5 : 2))\n\t\t\t.style(\"fill\", (_, i) => (i === select ? \"orange\" : \"grey\"));\n\t}\n\t/* \n\t\tGenerate the d3 scales \t\n\t\t@return {xScale, yScale}\t\n\t*/\n\tgenerateScales(start, stop, width, height, padding) {\n\t\tconst xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\treturn { xScale, yScale };\n\t}\n\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\t/* destructure props */\n\t\tconst { width, height, padding, start, stop, id } = this.props;\n\t\t/* set container and append svg */\n\t\tconst container = d3.select(`#scatter${id}`);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\n\t\t/* generate the scales */\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\t/* create axes */\n\t\tconst xAxis = d3.axisBottom().scale(xScale);\n\t\tconst yAxis = d3.axisRight().scale(yScale);\n\t\t/* intitialize all parts of the graph */\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"scatterline\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tX,\n\t\t\ty,\n\t\t\tyhat,\n\t\t\tid,\n\t\t\tselect,\n\t\t\tduration,\n\t\t} = this.props;\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\tconst svg = d3.select(`#scatter${id}`).select(\"svg\");\n\n\t\t/* push data */\n\t\tlet dataSet = [];\n\t\tlet curve = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\t\t\tcurve.push([xScale(X[i]), yScale(yhat[i])]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tthis.plotPoints(svg, dataSet, select);\n\t\tsvg.select(\"#scatterline\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", d3.line()(curve))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\n\trender() {\n\t\tconst { id } = this.props;\n\t\treturn <div id={`scatter${id}`}></div>;\n\t}\n}\n\nexport default ScatterPlot;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tAnimatedScatterPlot.js is a component that handles logic for animating change in the backward pass\n*/\nimport React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass AnimatedScatterPlot extends Component {\n\t/* \n\t\tplot points and handle for the selected point \n\t\t@param node, formattedPoints, select\n\t*/\n\tplotPoints(node, formattedPoints, select) {\n\t\tconst pointValue = { x: this.props.X[select], y: this.props.y[select] };\n\t\tconst isSelected = (index, selectIndex) => index === selectIndex;\n\t\tconst selectStyle = { color: \"#4BA3C3\", radius: 5 };\n\t\tconst defaultStyle = { color: \"grey\", radius: 2 };\n\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", (_, i) =>\n\t\t\t\tisSelected(i, select) ? selectStyle.radius : defaultStyle.radius\n\t\t\t)\n\t\t\t.style(\"fill\", (_, i) =>\n\t\t\t\tisSelected(i, select) ? selectStyle.color : defaultStyle.color\n\t\t\t);\n\n\t\t/* plots the selected coordinate */\n\t\tnode.append(\"text\")\n\t\t\t.attr(\"x\", formattedPoints[select].x + 10)\n\t\t\t.attr(\"y\", formattedPoints[select].y)\n\t\t\t.attr(\"fill\", selectStyle.color)\n\t\t\t.attr(\"font-size\", \"12px\")\n\t\t\t.text(`(${pointValue.x.toFixed(2)},${pointValue.y.toFixed(2)})`);\n\t}\n\t/* \n\t\tGenerate the d3 scales \t\n\t\t@return {xScale, yScale}\t\n\t*/\n\tgenerateScales(start, stop, width, height, padding) {\n\t\tconst xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\treturn { xScale, yScale };\n\t}\n\n\t/* \n\t\tanimates the change in line\n\t */\n\tanimateLineChange(node, color, array1, array2, duration) {\n\t\tnode.attr(\"d\", d3.line()(array1))\n\t\t\t.attr(\"stroke\", color)\n\t\t\t.attr(\"fill\", \"none\");\n\t\tnode.transition().duration(duration).attr(\"d\", d3.line()(array2));\n\t}\n\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\tconst { width, height, padding, start, stop, id } = this.props;\n\t\tconst container = d3.select(`#animatedPlot${id}`);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"scatterline\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tupdateAll() {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tX,\n\t\t\ty,\n\t\t\tyhat,\n\t\t\tid,\n\t\t\tselect,\n\t\t\tpotential,\n\t\t} = this.props;\n\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\tconst svg = d3.select(`#animatedPlot${id}`).select(\"svg\");\n\t\tlet dataSet = [];\n\t\tlet realYhat = [];\n\t\tlet zeroArray = [];\n\t\tlet potentialYhat = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\n\t\t\tconst xNum = xScale(X[i]);\n\t\t\trealYhat.push([xNum, yScale(yhat[i])]);\n\t\t\tpotentialYhat.push([xNum, yScale(potential[i])]);\n\t\t\tzeroArray.push([xNum, yScale(0)]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tsvg.selectAll(\"text\").remove();\n\t\tconst line = svg.select(\"#scatterline\");\n\t\tthis.plotPoints(svg, dataSet, select);\n\t\tif (this.props.status === \"reset\") {\n\t\t\tline.attr(\"id\", \"scatterline\")\n\t\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t\t.attr(\"fill\", \"none\");\n\t\t} else {\n\t\t\tif (this.props.status === \"real\") {\n\t\t\t\tthis.animateLineChange(line, \"black\", zeroArray, realYhat, 750);\n\t\t\t} else if (this.props.status === \"pred\") {\n\t\t\t\tthis.animateLineChange(\n\t\t\t\t\tline,\n\t\t\t\t\t\"orangered\",\n\t\t\t\t\trealYhat,\n\t\t\t\t\tpotentialYhat,\n\t\t\t\t\t750\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.updateAll();\n\t}\n\tshouldComponentUpdate() {\n\t\treturn !this.props.shouldNotRender;\n\t}\n\n\trender() {\n\t\tconst { id } = this.props;\n\t\treturn <div id={`animatedPlot${id}`}></div>;\n\t}\n}\n\nexport default AnimatedScatterPlot;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tLoss.js is a component that plots the loss curve\n*/\nimport React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass Loss extends Component {\n\tcomponentDidMount() {\n\t\tconst container = d3.select(\"#sweet\"); //I need to seriously get some therapy for my naming conventions\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst padding = 0;\n\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([0, -1])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, 1])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(0));\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"line\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t\t//svg.append(\"text\").attr(\"x\", 1).attr(\"y\", -5).text(\"loss:\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { lossArray, duration } = this.props;\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst start = 0;\n\t\tconst stop = lossArray.length - 1;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([1, width - 2 * padding]);\n\n\t\tlet lossMin = d3.min(lossArray);\n\t\tlet lossMax = d3.max(lossArray);\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([lossMin, lossMax])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#sweet\").select(\"svg\");\n\t\tlet a = [];\n\t\tfor (let i = 0; i < lossArray.length; i++) {\n\t\t\ta.push([xScale(i), yScale(lossArray[i])]);\n\t\t}\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.select(\"#x\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis.ticks(5));\n\n\t\tsvg.select(\"#y\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(5));\n\t\tsvg.select(\"#line\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\trender() {\n\t\treturn <div id=\"sweet\"></div>;\n\t}\n}\n\nexport default Loss;\n","/* \n\tI have to use aberviations so my monkey brain doesnt have to type alot\n*/\nimport \"katex/dist/katex.min.css\";\nimport { InlineMath, BlockMath } from \"react-katex\";\n\nexport const $ = (inlineLaTeX) => <InlineMath math={inlineLaTeX} />;\nexport const $$ = (blockLaTeX) => <BlockMath math={blockLaTeX} />;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis component renders the contour and a dot to represent where we are\n*/\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./line.css\";\n\nconst redColor = \"red\";\n\nfunction addAxes({\n\tnode,\n\txScale,\n\tyScale,\n\twidth,\n\theight,\n\tticks = 10,\n\tpadding = 0,\n}) {\n\tconst xAxis = d3.axisTop().scale(xScale),\n\t\tyAxis = d3.axisLeft().scale(yScale);\n\n\tnode.select(\"#xAxis-contour\")\n\t\t.attr(\"class\", \"axis\")\n\t\t.attr(\"transform\", `translate(0,0)`)\n\t\t.call(xAxis.ticks(ticks));\n\tnode.select(\"#yAxis-contour\")\n\t\t.attr(\"class\", \"axis\")\n\t\t.attr(\"transform\", \"translate(\" - (width - 2 * padding) + \",0)\")\n\t\t.call(yAxis.ticks(ticks));\n}\n\nfunction updateLines({\n\tnode,\n\tm = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\tb = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\tstroke = \"none\",\n\tmStroke = stroke,\n\tbStroke = stroke,\n}) {\n\tnode.select(\"#m-line\")\n\t\t.attr(\"x1\", m[0][0])\n\t\t.attr(\"y1\", m[0][1])\n\t\t.attr(\"x2\", m[1][0])\n\t\t.attr(\"y2\", m[1][1])\n\t\t.attr(\"class\", \"line\")\n\t\t.attr(\"id\", \"m-line\")\n\t\t.style(\"stroke\", mStroke);\n\n\tnode.select(\"#b-line\")\n\t\t.attr(\"x1\", b[0][0])\n\t\t.attr(\"y1\", b[0][1])\n\t\t.attr(\"x2\", b[1][0])\n\t\t.attr(\"y2\", b[1][1])\n\t\t.attr(\"id\", \"b-line\")\n\t\t.attr(\"class\", \"line\")\n\t\t.style(\"stroke\", bStroke);\n}\n\nfunction updateLossText(\n\tnode,\n\t{\n\t\tx = 0,\n\t\ty = 0,\n\t\thidden = true,\n\t\ttext = \"none\",\n\t\ttextColor = redColor,\n\t\trectFillColor = \"hsla(0, 0%, 100%, 0.5)\",\n\t}\n) {\n\tconst rectX = x + 10;\n\tconst rectY = y + 10;\n\tnode.select(\"#loss-rect\")\n\t\t.attr(\"x\", rectX)\n\t\t.attr(\"y\", rectY)\n\t\t.attr(\"width\", 100)\n\t\t.attr(\"height\", 30)\n\t\t.attr(\"fill\", hidden ? \"none\" : rectFillColor)\n\t\t.attr(\"stroke\", hidden ? \"none\" : textColor);\n\tnode.select(\"#loss-text\")\n\t\t.attr(\"x\", rectX + 10)\n\t\t.attr(\"y\", rectY + 20)\n\t\t.attr(\"fill\", hidden ? \"none\" : textColor)\n\t\t.text(text);\n}\n\nconst mTransform = (m, width) => width / 2 + (m / 10) * width;\nconst bTransform = (b, height) => (b / 20) * height;\n\nclass ContourLoss extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidth: 200,\n\t\t\theight: 200,\n\t\t};\n\t\tthis.loss = this.loss.bind(this);\n\t}\n\tloss(m, b) {\n\t\tconst { data } = this.props;\n\t\tlet x = data.X,\n\t\t\ty = data.y;\n\t\tlet summed = 0;\n\t\tfor (let i = 0; i < data.X.length; i++) {\n\t\t\tsummed += Math.pow(m * x[i] + b - y[i], 2);\n\t\t}\n\t\treturn summed / (2 * x.length);\n\t}\n\tasync componentDidMount() {\n\t\tconst { width, height } = await this.state;\n\t\tconst svg = d3.select(\"#divContour\").select(\"#contour\");\n\t\tconst { data, darkness } = await this.props;\n\t\tlet n = width,\n\t\t\tm = height,\n\t\t\tvalues = new Array(n * m);\n\n\t\t/* \n\t\t\tthis code below was adapted from\n\t\t\td3-contour documentation examples\n\t\t*/\n\t\tconst ms = [],\n\t\t\tbs = [];\n\t\tfor (let j = 0.5, k = 0; j < m; ++j) {\n\t\t\tfor (let i = 0.5; i < n; ++i, ++k) {\n\t\t\t\tconst tempM = (i / n) * 10 - 5;\n\t\t\t\tconst tempB = (j / m) * 20;\n\n\t\t\t\tms.push(tempM);\n\t\t\t\tbs.push(tempB);\n\n\t\t\t\tconst outputLoss = this.loss(tempM, tempB);\n\t\t\t\tvalues[k] = outputLoss;\n\t\t\t}\n\t\t}\n\n\t\tconst msExtrema = d3.extent(ms);\n\t\tconst bsExtrema = d3.extent(bs);\n\t\tconst getMin = (extrema) => extrema[0];\n\t\tconst getMax = (extrema) => extrema[1];\n\n\t\tlet thresholds = await d3\n\t\t\t.range(darkness, 20, 1)\n\t\t\t.map((i) => Math.pow(2, i));\n\t\tlet color = d3.scaleSequentialLog(\n\t\t\td3.extent(thresholds),\n\t\t\td3.interpolateCool\n\t\t);\n\t\tconst contours = d3.contours().size([n, m]).thresholds(thresholds)(\n\t\t\tvalues\n\t\t);\n\n\t\tconst xScale = d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.domain([getMin(msExtrema), getMax(msExtrema)])\n\t\t\t\t.range([0, width]),\n\t\t\tyScale = d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.domain([getMin(bsExtrema), getMax(bsExtrema)])\n\t\t\t\t.range([0, height]);\n\n\t\taddAxes({\n\t\t\tnode: svg,\n\t\t\theight,\n\t\t\twidth,\n\t\t\txScale,\n\t\t\tyScale,\n\t\t\tpadding: 0,\n\t\t\tticks: 10,\n\t\t});\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(contours)\n\t\t\t.join(\"path\")\n\t\t\t.attr(\"fill\", (d) => color(d.value))\n\t\t\t.attr(\"d\", d3.geoPath());\n\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", 0)\n\t\t\t.attr(\"y2\", 0)\n\t\t\t.attr(\"id\", \"b-line\")\n\t\t\t.style(\"stroke\", \"none\");\n\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", 0)\n\t\t\t.attr(\"y2\", 0)\n\t\t\t.attr(\"id\", \"m-line\")\n\t\t\t.style(\"stroke\", \"none\");\n\n\t\tsvg.append(\"circle\")\n\t\t\t.attr(\"cx\", width / 2)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 5)\n\t\t\t.style(\"fill\", \"none\")\n\t\t\t.style(\"stoke\", \"none\");\n\n\t\tsvg.append(\"rect\").attr(\"id\", \"loss-rect\");\n\t\tsvg.append(\"text\").attr(\"id\", \"loss-text\");\n\t\tupdateLossText(svg, { hidden: true });\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { width, height } = this.state;\n\t\tconst { loss, ms, m, b, wColor, bColor } = this.props;\n\t\tconst svg = d3.select(\"#divContour\").select(\"#contour\");\n\t\tif (loss == null) {\n\t\t\tsvg.select(\"circle\")\n\t\t\t\t.attr(\"cx\", width / 2)\n\t\t\t\t.attr(\"cy\", 0)\n\t\t\t\t.attr(\"r\", 5)\n\t\t\t\t.style(\"fill\", \"none\")\n\t\t\t\t.style(\"stroke\", \"none\");\n\n\t\t\tupdateLines({ node: svg });\n\t\t\tsvg.select(\"#m-text\").attr(\"fill\", \"#0000\");\n\t\t\tsvg.select(\"#b-text\").attr(\"fill\", \"#0000\");\n\t\t\tupdateLossText(svg, { hidden: true });\n\t\t\treturn;\n\t\t}\n\t\tif (loss < 1000) {\n\t\t\tconst newM = mTransform(m, width),\n\t\t\t\tnewB = bTransform(b, height);\n\t\t\tsvg.select(\"circle\")\n\t\t\t\t.transition()\n\t\t\t\t.duration(200 - ms)\n\t\t\t\t.attr(\"cx\", newM)\n\t\t\t\t.attr(\"cy\", newB)\n\t\t\t\t.attr(\"r\", 4)\n\t\t\t\t.style(\"stroke\", \"white\")\n\t\t\t\t.style(\"stroke-width\", 3)\n\t\t\t\t.style(\"fill\", redColor)\n\t\t\t\t.style(\"opacity\", \"1.0\");\n\n\t\t\tsvg.select(\"#m-text\")\n\t\t\t\t.text(`w = ${m.toFixed(2)}`)\n\t\t\t\t.attr(\"x\", newM)\n\t\t\t\t.attr(\"y\", -20)\n\t\t\t\t.attr(\"fill\", wColor)\n\t\t\t\t.style(\"font-weight\", 500);\n\t\t\tsvg.select(\"#b-text\")\n\t\t\t\t.text(`b = ${b.toFixed(2)}`)\n\t\t\t\t.attr(\"x\", -20)\n\t\t\t\t.attr(\"y\", newB + 5)\n\t\t\t\t.attr(\"fill\", bColor)\n\t\t\t\t.style(\"font-weight\", 500);\n\n\t\t\tupdateLines({\n\t\t\t\tnode: svg,\n\t\t\t\tb: [\n\t\t\t\t\t[-15, newB],\n\t\t\t\t\t[newM, newB],\n\t\t\t\t],\n\t\t\t\tm: [\n\t\t\t\t\t[newM, -15],\n\t\t\t\t\t[newM, newB],\n\t\t\t\t],\n\t\t\t\tmStroke: d3.color(wColor).brighter(),\n\t\t\t\tbStroke: d3.color(bColor).brighter(),\n\t\t\t});\n\t\t\tupdateLossText(svg, {\n\t\t\t\thidden: false,\n\t\t\t\ttext: `loss: ${loss.toFixed(3)}`,\n\t\t\t\tx: newM,\n\t\t\t\ty: newB,\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst { width, height } = this.state;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid=\"divContour\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpaddingLeft: \"85px\",\n\t\t\t\t\tpaddingTop: \"40px\",\n\t\t\t\t\toverflow: \"visible\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\tstyle={{ width, height, overflow: \"visible\" }}\n\t\t\t\t\tid=\"contour\"\n\t\t\t\t>\n\t\t\t\t\t<g id=\"xAxis-contour\" />\n\t\t\t\t\t<g id=\"yAxis-contour\" />\n\t\t\t\t\t<text id=\"m-text\" style={{ textAnchor: \"middle\" }}></text>\n\t\t\t\t\t<text id=\"b-text\" style={{ textAnchor: \"end\" }}></text>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ContourLoss;\n","export default __webpack_public_path__ + \"static/media/autoKey.c81582c4.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file contains the logic and component for autotool.\n\t\tIt brings together the control logic, the loss contour and the graph.\n*/\nimport React, { Component } from \"react\";\nimport ContourLoss from \"./ContourLoss\";\nimport { ScatterPlot } from \"../../exports\";\nimport { $ } from \"../article/Typeset\";\nimport * as d3 from \"d3\";\nimport autoKeySVG from \"./assets/autoKey.svg\";\n\nimport {\n\tFab,\n\tIconButton,\n\tBox,\n\tCard,\n\tCardContent,\n\tTypography,\n} from \"@material-ui/core\";\nimport { PlayArrow, Stop, Replay, SlowMotionVideo } from \"@material-ui/icons\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nconst orange = \"#FFA500\";\nconst blue = \"#56A8C7\";\nclass SubTool extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyhat: [],\n\t\t\tdarkness: -4,\n\t\t\tplayButton: true,\n\t\t\tlinreg: {\n\t\t\t\tmeanSquaredError: 0,\n\t\t\t\trsquared: null,\n\t\t\t\tdata: {\n\t\t\t\t\tX: [],\n\t\t\t\t\ty: [],\n\t\t\t\t},\n\t\t\t\thyperparams: {\n\t\t\t\t\tlearningRate: 0.03,\n\t\t\t\t\tepochs: 0,\n\t\t\t\t\tloss: null,\n\t\t\t\t\tspeed: 200,\n\t\t\t\t},\n\t\t\t\ttunableparams: {\n\t\t\t\t\tm: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tthis.generateData = this.generateData.bind(this);\n\t\tthis.linearRegression = this.linearRegression.bind(this);\n\t\tthis.a = this.a.bind(this);\n\t\tthis.handleSlider = this.handleSlider.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t}\n\n\treset() {\n\t\tthis.generateData();\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tplayButton: true,\n\t\t\tlinreg: {\n\t\t\t\t...this.state.linreg,\n\t\t\t\trsquared: null,\n\t\t\t\thyperparams: {\n\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\tepochs: 0,\n\t\t\t\t\tloss: null,\n\t\t\t\t},\n\t\t\t\ttunableparams: {\n\t\t\t\t\tm: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\tgenerateData() {\n\t\ttf.tidy(() => {\n\t\t\t/* The data we will use */\n\t\t\tconst yhat = [0, 0, 0, 0, 0, 0];\n\t\t\tconst X = [0, 1, 2, 3, 4, 5];\n\t\t\tconst y = [5, 4, 3, 2, 1, 0];\n\t\t\tconst yTensor = tf.tensor(y);\n\n\t\t\tconst mean = tf.mean(yTensor).dataSync()[0];\n\t\t\tconst meanSquaredError =\n\t\t\t\t(1 / (X.length * 2)) *\n\t\t\t\ttf.sum(tf.pow(tf.sub(mean, yTensor), 2)).dataSync()[0];\n\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tyhat,\n\t\t\t\tlinreg: {\n\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\tmeanSquaredError,\n\t\t\t\t\tdata: { X, y },\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tlinearRegression() {\n\t\ttf.tidy(() => {\n\t\t\t/* It really doesnt need to go this far */\n\t\t\tif (this.state.linreg.hyperparams.epochs > 10000) {\n\t\t\t\tthis.setState({ playButton: !this.state.playButton });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//hypothesis function\n\t\t\tlet { m, b } = this.state.linreg.tunableparams;\n\t\t\tlet { learningRate } = this.state.linreg.hyperparams;\n\t\t\tconst { X, y } = this.state.linreg.data;\n\t\t\tconst XTensor = tf.tensor(X);\n\t\t\tconst yTensor = tf.tensor(y);\n\n\t\t\tlet yPred = h(XTensor, m, b);\n\t\t\tlet len = XTensor.shape[0];\n\t\t\tfunction h(X, m, b) {\n\t\t\t\treturn tf.add(tf.mul(X, m), b);\n\t\t\t}\n\t\t\t//Define the loss function\n\t\t\tfunction loss(y, y_pred) {\n\t\t\t\treturn (\n\t\t\t\t\t(1 / (2 * len)) *\n\t\t\t\t\ttf.sum(tf.pow(tf.sub(y_pred, y), 2)).dataSync()[0]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//then compute the gradient\n\t\t\tconst dlossdm =\n\t\t\t\t(1 / len) *\n\t\t\t\ttf.sum(tf.mul(tf.sub(yPred, yTensor), XTensor)).dataSync()[0];\n\t\t\tconst dlossdb =\n\t\t\t\t(1 / len) * tf.sum(tf.sub(yPred, yTensor)).dataSync()[0];\n\t\t\tconst lossValue = loss(yTensor, yPred);\n\n\t\t\t//gradient descent by updating the m and b\n\t\t\tm += -learningRate * dlossdm;\n\t\t\tb += -learningRate * dlossdb;\n\t\t\tconst rsquared = 1 - lossValue / this.state.linreg.meanSquaredError;\n\t\t\tconst epochs = this.state.linreg.hyperparams.epochs + 1;\n\t\t\tconst yhat = Array.from(yPred.dataSync());\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tyhat,\n\t\t\t\tlinreg: {\n\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\trsquared,\n\t\t\t\t\ttunableparams: { m, b },\n\t\t\t\t\thyperparams: {\n\t\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\t\tepochs: epochs,\n\t\t\t\t\t\tloss: lossValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tasync a() {\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\tconst upperBounds = 200;\n\t\twhile (true) {\n\t\t\tconst { speed } = this.state.linreg.hyperparams;\n\t\t\tconst changeSpeed = upperBounds - speed;\n\t\t\tawait this.linearRegression();\n\t\t\t//await this.forceUpdate();\n\t\t\tawait timer(changeSpeed);\n\t\t\tif (this.state.playButton === true) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\thandleSlider(event, value) {\n\t\tthis.setState({\n\t\t\tlinreg: {\n\t\t\t\t...this.state.linreg,\n\t\t\t\thyperparams: {\n\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\tspeed: value,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.generateData();\n\t}\n\n\trender() {\n\t\tconst { m, b } = this.state.linreg.tunableparams;\n\t\tconst { loss, speed, epochs } = this.state.linreg.hyperparams;\n\t\tconst { data } = this.state.linreg;\n\t\tconst nullColor = (val) => (val === null ? \"#dce0dd\" : \"black\");\n\t\tconst nullNumber = (num, precision) =>\n\t\t\tnum === null ? num : num.toFixed(precision);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\n\t\t\t\t\t<Box marginTop={10} marginRight={10}>\n\t\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\tstop={5}\n\t\t\t\t\t\t\tX={data.X}\n\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\tyhat={this.state.yhat}\n\t\t\t\t\t\t\tid={420}\n\t\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\t\tduration={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\">\n\t\t\t\t\t\t\t\tEPOCH: {epochs}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t{$(\"\\\\text{neuron}(x) = \")}\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: blue,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{$(`${nullNumber(m, 2)}`)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{$(` x\\\\ + \\\\ `)}\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: orange,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{$(`${nullNumber(b, 2)}`)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div style={{ margin: \"20px 10px\" }} />\n\n\t\t\t\t\t\t\t<IconButton onClick={this.reset}>\n\t\t\t\t\t\t\t\t<Replay />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: this.state.playButton\n\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.setState({\n\t\t\t\t\t\t\t\t\t\tplayButton: !this.state.playButton,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tawait this.a();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.playButton ? (\n\t\t\t\t\t\t\t\t\t<PlayArrow />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Stop />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Fab>\n\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: speed === 200 ? \"grey\" : \"#FFC006\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tlinreg: {\n\t\t\t\t\t\t\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\t\t\t\t\t\t\thyperparams: {\n\t\t\t\t\t\t\t\t\t\t\t\t...this.state.linreg\n\t\t\t\t\t\t\t\t\t\t\t\t\t.hyperparams,\n\t\t\t\t\t\t\t\t\t\t\t\tspeed:\n\t\t\t\t\t\t\t\t\t\t\t\t\tspeed === 200 ? 120 : 200,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SlowMotionVideo />\n\t\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\theight: \"1px\",\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\tbackground: \"#0001\",\n\t\t\t\t\t\t\t\t\tmarginTop: \"25px\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* <img src={autoKeySVG} alt=\"legend\" width=\"40%\" /> */}\n\t\t\t\t\t\t\t<ContourLoss\n\t\t\t\t\t\t\t\tms={speed}\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tm={isFinite(m) ? m : 0}\n\t\t\t\t\t\t\t\tb={isFinite(b) ? b : 0}\n\t\t\t\t\t\t\t\tloss={loss}\n\t\t\t\t\t\t\t\tdarkness={this.state.darkness}\n\t\t\t\t\t\t\t\twColor={blue}\n\t\t\t\t\t\t\t\tbColor={orange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SubTool;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file is designed to generate the component for the manial linear scatter exercise\n*/\nimport { Box, Card, CardContent, Slider, Button } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { ScatterPlot } from \"../../exports\";\nimport { $ } from \"./Typeset\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nclass LinearScatter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tweight: -0.82,\n\t\t\tbias: -0.02,\n\t\t\tloss: 0,\n\t\t\tdomain: [],\n\t\t\trange: [],\n\t\t\tline: [],\n\t\t\tshow: true,\n\t\t\twidth: 400,\n\t\t\tbiasColor: \"#FFA500\",\n\t\t\tweightColor: \"#56A8C7\",\n\t\t\tlossColor: \"red\",\n\t\t};\n\t}\n\t//Define the loss function\n\tloss(y, y_pred, len) {\n\t\tconst outputLoss = tf.tidy(() => {\n\t\t\tconst yTensor = tf.tensor(y);\n\t\t\tconst y_predTensor = tf.tensor(y_pred);\n\t\t\tconst compute =\n\t\t\t\t(1 / (2 * len)) *\n\t\t\t\ttf.sum(tf.pow(tf.sub(y_predTensor, yTensor), 2)).dataSync()[0];\n\t\t\treturn compute;\n\t\t});\n\t\treturn outputLoss;\n\t}\n\tcomputeLine(weight, bias, domain) {\n\t\tconst line = (X) => weight * X + bias;\n\t\tlet output = new Array(domain.length);\n\t\tfor (let i = 0; i < domain.length; i++) {\n\t\t\toutput[i] = line(domain[i]);\n\t\t}\n\t\treturn output;\n\t}\n\tzeros(length) {\n\t\tlet array = new Array(length);\n\t\tfor (let i = 0; i < length; i++) array[i] = 0;\n\t\treturn array;\n\t}\n\trange(start, stop, increment) {\n\t\tlet array = [];\n\t\tfor (let i = start; i <= stop; i += increment) array.push(i);\n\t\treturn array;\n\t}\n\tdataGenerator() {\n\t\tconst initDomain = this.range(-1, 1, 0.1);\n\t\tconst initRange = this.computeLine(0.65, -0.3, initDomain);\n\t\tconst initLine = this.computeLine(\n\t\t\tthis.state.weight,\n\t\t\tthis.state.bias,\n\t\t\tinitDomain\n\t\t);\n\t\tconst loss = this.loss(initRange, initLine, initRange.length);\n\t\tthis.setState({\n\t\t\tdomain: initDomain,\n\t\t\trange: initRange,\n\t\t\tline: initLine,\n\t\t\tloss,\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.dataGenerator();\n\t}\n\trender() {\n\t\tconst {\n\t\t\tdomain,\n\t\t\trange,\n\t\t\tbias,\n\t\t\tweight,\n\t\t\tline,\n\t\t\tloss,\n\t\t\tshow,\n\t\t\twidth,\n\t\t\tweightColor,\n\t\t\tbiasColor,\n\t\t\tlossColor,\n\t\t} = this.state;\n\t\treturn (\n\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Box style={{ filter: `blur(${show ? 0 : 25}px)` }}>\n\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\theight={width}\n\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\tstart={-1}\n\t\t\t\t\t\tstop={1}\n\t\t\t\t\t\tX={domain}\n\t\t\t\t\t\ty={range}\n\t\t\t\t\t\tyhat={line}\n\t\t\t\t\t\tid={69}\n\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\tduration={0}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box marginLeft={7}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tManually tune{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: weightColor }}>weight</em>{\" \"}\n\t\t\t\t\t\t\t\tand <em style={{ color: biasColor }}>bias</em>{\" \"}\n\t\t\t\t\t\t\t\tand try to reach a{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: lossColor }}>loss</em> of 0\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tstyle={{ color: weightColor }}\n\t\t\t\t\t\t\t\tvalue={weight}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tconst newLine = this.computeLine(\n\t\t\t\t\t\t\t\t\t\tweight,\n\t\t\t\t\t\t\t\t\t\tbias,\n\t\t\t\t\t\t\t\t\t\tdomain\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst loss = this.loss(\n\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\tnewLine,\n\t\t\t\t\t\t\t\t\t\trange.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tweight: n,\n\t\t\t\t\t\t\t\t\t\tline: newLine,\n\t\t\t\t\t\t\t\t\t\tloss,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t></Slider>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tstyle={{ color: biasColor }}\n\t\t\t\t\t\t\t\tvalue={bias}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tconst newLine = this.computeLine(\n\t\t\t\t\t\t\t\t\t\tweight,\n\t\t\t\t\t\t\t\t\t\tbias,\n\t\t\t\t\t\t\t\t\t\tdomain\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst loss = this.loss(\n\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\tnewLine,\n\t\t\t\t\t\t\t\t\t\trange.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tbias: n,\n\t\t\t\t\t\t\t\t\t\tline: newLine,\n\t\t\t\t\t\t\t\t\t\tloss,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t{$(\"\\\\text{neuron}(x) = \")}{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: weightColor }}>\n\t\t\t\t\t\t\t\t\t{$(`${weight}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t\t{$(\"x + \")}{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: biasColor }}>\n\t\t\t\t\t\t\t\t\t{$(`${bias}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i style={{ color: lossColor }}>loss</i>{\" \"}\n\t\t\t\t\t\t\t\t{$(\n\t\t\t\t\t\t\t\t\t` = \\\\frac{1}{J}\\\\sum_{i = 1}^J (\\\\hat{y_i} - y_i)^2 =`\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<em style={{ color: lossColor }}>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{$(`${loss.toFixed(7)}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t{/* <Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ show: !this.state.show });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClick to Reveal Graph\n\t\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default LinearScatter;\n","export default __webpack_public_path__ + \"static/media/summary.c45974a2.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is a component for the nested function chain rule example\n*/\nimport React, { Component } from \"react\";\nimport {\n\tTypography,\n\tSlider,\n\tBox,\n\tCard,\n\tCardContent,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\";\n\nclass NestedFunction extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\toutput1: 0,\n\t\t\toutput2: 0,\n\t\t\toutput3: 0,\n\t\t\tweights: [],\n\t\t\tbiases: [],\n\t\t};\n\t\tthis.compute = this.compute.bind(this);\n\t\tthis.initParams = this.initParams.bind(this);\n\t}\n\tcompute(input) {\n\t\tconst { weights, biases } = this.state;\n\t\tconst linfunc = (x, w, b) => w * x + b;\n\n\t\tconst output1 = linfunc(input, weights[0], biases[0]).toFixed(3);\n\t\tconst output2 = linfunc(output1, weights[1], biases[1]).toFixed(3);\n\t\tconst output3 = linfunc(output2, weights[2], biases[2]).toFixed(3);\n\t\tthis.setState({ input, output1, output2, output3 });\n\t}\n\tgenRandomArray(length) {\n\t\tlet arr = new Array(length);\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = +Math.random().toFixed(2);\n\t\t}\n\t\treturn arr;\n\t}\n\tasync initParams() {\n\t\tconst weights = this.genRandomArray(3);\n\t\tconst biases = this.genRandomArray(3);\n\t\tthis.setState({ weights, biases });\n\t}\n\tasync componentDidMount() {\n\t\tawait this.initParams();\n\t\tthis.compute(34);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tinput,\n\t\t\toutput1,\n\t\t\toutput2,\n\t\t\toutput3,\n\t\t\tweights,\n\t\t\tbiases,\n\t\t} = this.state;\n\t\tconst fixedInput = input.toFixed(3);\n\t\tconst outputArr = [\n\t\t\t{ output: output1, color: \"#8db600\" },\n\t\t\t{ output: output2, color: \"#FF8F00\" },\n\t\t\t{ output: output3, color: \"#56A8C7\" },\n\t\t];\n\n\t\t//prettier-ignore\n\t\treturn (\n\t\t\t<Box display=\"flex\">\n\t\t\t\t<Box width={580}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tthis.compute(n);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t\t<Box justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<svg width={500} height={64}>\n\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\td={`M${36} 16, ${100} 16`}\n\t\t\t\t\t\t\t\t\t\t\tstroke={\"#f50557\"}\n\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={3 * weights[0] + 0.2}\n\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t<text x={40} y={40} fill={\"#f50557\"}>\n\t\t\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t{outputArr.map((d, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<g key={i} >\n\t\t\t\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={100 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={0}\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\theight={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t\t\t\t\t\t\t></rect>\n\t\t\t\t\t\t\t\t\t\t\t\t<text x={111 + 100 * i} y={22}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\td={`M${132 + 100 * i} 16, ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t200 + 100 * i\n\t\t\t\t\t\t\t\t\t\t\t\t\t} 16`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti < 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 3 *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweights[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t] +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={140 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={40}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{d.output}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron1(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inherit\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[0]}(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inherit\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[0]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron2(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[1]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[1]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron3(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t) = {weights[2]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[2]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#56A8C7\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output3}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.initParams();\n\t\t\t\t\t\t\t\t\t//this.compute(this.state.input);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tnew Weights and biases\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default NestedFunction;\n","import React, { Component } from \"react\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\n\nclass ToggleForward extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tkey: false,\n\t\t};\n\t}\n\trender() {\n\t\tconst { key } = this.state;\n\t\tconst { noKeySVG, keySVG, title } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tsrc={key ? keySVG : noKeySVG}\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ key: !key });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClick here to see descriptions of the diagram above\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ToggleForward;\n","export default __webpack_public_path__ + \"static/media/forward-key.faefbb8b.svg\";","export default __webpack_public_path__ + \"static/media/forward.ff39da98.svg\";","export default __webpack_public_path__ + \"static/media/forwardComputation.42bcf438.svg\";","export default __webpack_public_path__ + \"static/media/backward-key.af99d48b.svg\";","export default __webpack_public_path__ + \"static/media/backward.6cd01f92.svg\";","export default __webpack_public_path__ + \"static/media/backwardComputation.6427121a.svg\";","export default __webpack_public_path__ + \"static/media/contour-explain.00defcff.svg\";","export default __webpack_public_path__ + \"static/media/gd-explain.8aebb83e.svg\";","export default __webpack_public_path__ + \"static/media/headerTitle.66b764c3.svg\";","export default __webpack_public_path__ + \"static/media/singleSummary.8525cefd.svg\";","export default __webpack_public_path__ + \"static/media/epochMode.0ae87189.png\";","export default __webpack_public_path__ + \"static/media/key.a581ba62.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is the class definiton and implmentation of Neuron for Nerual Network\n*/\nexport class Neuron {\n\tconstructor(weights, bias) {\n\t\tthis.weights = weights;\n\t\tthis.bias = bias;\n\t}\n\t/* Next functions are just helper functions for the operations */\n\tmult(array1, array2) {\n\t\treturn array1.map((item, i) => {\n\t\t\treturn item * array2[i];\n\t\t});\n\t}\n\tdMult(dvalues, oppositeParameter) {\n\t\treturn this.mult(dvalues, oppositeParameter);\n\t}\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tdSum(dvalue, numInputs) {\n\t\tlet dSumArray = [];\n\t\tfor (let i = 0; i < numInputs; i++) {\n\t\t\tdSumArray.push(dvalue);\n\t\t}\n\t\treturn dSumArray;\n\t}\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: feed forward of single neuron\n\t\t@param: inputs, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tforward(inputs, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { weights, bias } = this;\n\t\tconst { mult, sum } = this;\n\t\t/* propogate forward */\n\t\tconst multStep = mult(inputs, weights);\n\t\tconst sumStep = sum(multStep) + bias;\n\t\tconst actStep = activation(sumStep);\n\n\t\t/* Save values */\n\t\tthis.inputs = inputs;\n\t\tthis.multStep = multStep;\n\t\tthis.sumStep = sumStep;\n\t\tthis.actStep = actStep;\n\t\tthis.output = actStep;\n\t}\n\n\t/* \n\t\tPurpose: feed backward of single neuron\n\t\t@param: dvalue, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tbackward(dvalue, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { inputs, weights, actStep } = this;\n\t\tconst { dSum, mult, sum } = this;\n\t\t/* propgate backwards */\n\t\tconst dActStep = activation(actStep) * dvalue;\n\t\tconst dSumStep = dSum(dActStep, inputs.length);\n\t\tconst dBias = dActStep;\n\t\tconst dWeights = mult(dSumStep, inputs);\n\t\tconst dInputs = mult(dSumStep, weights);\n\t\tconst dInputsSum = sum(dInputs);\n\n\t\t/* Save values */\n\t\tthis.dvalue = dvalue;\n\t\tthis.dActStep = dActStep;\n\t\tthis.dSumStep = dSumStep;\n\t\tthis.dBias = dBias;\n\t\tthis.dWeights = dWeights;\n\t\tthis.dInputs = dInputs;\n\t\tthis.dInputsSum = dInputsSum;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\texports the losses to be used for the neural network\n\t\t\n*/\nexport class MeanSquaredErrorLoss {\n\t/* \n\t\tPurpose: feed forward of the nerual network\n\t\t@param yhat, y\n\t\t@stores y, yhat, subStep, squareStep, output\n\t*/\n\tforward(yhat, y) {\n\t\tconst subStep = yhat - y;\n\t\tconst squareStep = (this.output = Math.pow(yhat - y, 2));\n\n\t\tthis.subStep = subStep;\n\t\tthis.squareStep = squareStep;\n\t\tthis.output = squareStep;\n\t}\n\t/* \n\t\tPurpose: feed backward of the nerual network\n\t\t@stores dInputs\n\t*/\n\tbackward() {\n\t\tthis.dInputs = 2 * this.subStep;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis creates the definiton and implemntation of the neural network in a non vectorized more manual way \n\t\tdesigned to show all the operations\n\tTODO: add the update that would update to the weights sgd style and compute forward once more to see difference\n*/\nimport { Neuron } from \"./Neuron\";\nimport { MeanSquaredErrorLoss } from \"./Loss\";\nexport class NeuralNetwork {\n\t/* here we construct the Neuron model */\n\tconstructor(shape, weights, biases) {\n\t\tthis.model = [];\n\t\tthis.loss = new MeanSquaredErrorLoss();\n\t\tthis.shape = shape;\n\n\t\t/* HERE WE CONSTRUCT THE MODEL ON CLASS CREATION */\n\t\tfor (let layer = 0; layer < weights.length; layer++) {\n\t\t\tlet dense = [];\n\t\t\tfor (let neuron = 0; neuron < weights[layer].length; neuron++) {\n\t\t\t\tdense.push(\n\t\t\t\t\tnew Neuron(weights[layer][neuron], biases[layer][neuron])\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.model.push(dense);\n\t\t}\n\t}\n\t/* Next are some helper functions */\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tadd(array1, array2) {\n\t\tconst array1Length = array1.length;\n\t\tconst array2Length = array2.length;\n\t\tif (array2Length !== array1Length) {\n\t\t\tconsole.error(\n\t\t\t\t`${array1Length} does not match ${array2Length}, so returned empty array`\n\t\t\t);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tlet result = new Array(array1Length);\n\t\t\tfor (let i = 0; i < array1.length; i++) {\n\t\t\t\tresult[i] = array1[i] + array2[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tzeros(length) {\n\t\tlet result = new Array(length);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult[i] = 0;\n\t\t}\n\t\treturn result;\n\t}\n\tdReLU(input) {\n\t\treturn input > 0 ? 1 : 0;\n\t}\n\tdLinear(input) {\n\t\treturn 1;\n\t}\n\n\tReLU(input) {\n\t\treturn Math.max(0, input);\n\t}\n\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: to feed forward the entire layer\n\t\t@param input, label\n\t\t@store model, yhat, loss\n\t*/\n\tforward(input, label) {\n\t\tlet inputs = [input];\n\t\tconst lastLayer = this.model.length;\n\t\tconst outputNeuron = 0;\n\t\t/* First iterate through each layer */\n\t\tfor (let layer = 0; layer < lastLayer - 1; layer++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[layer][neuron].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[layer][neuron].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][outputNeuron].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n\t/* \n\t\tPurpose: to feed backward the entire model per layer\n\t*/\n\tbackward() {\n\t\tconst { add, zeros } = this;\n\t\tthis.loss.backward();\n\t\tlet dValues = [this.loss.dInputs];\n\t\tconst lastLayer = this.model.length;\n\t\t/* take care of output neuron */\n\t\tconst outputNeuron = 0;\n\t\tthis.model[lastLayer - 1][outputNeuron].backward(\n\t\t\tdValues[outputNeuron],\n\t\t\tthis.dLinear\n\t\t);\n\t\tdValues = this.model[lastLayer - 1][outputNeuron].dInputs;\n\n\t\t/* We want to start the second to last layer */\n\t\tfor (let layer = lastLayer - 2; layer >= 0; layer--) {\n\t\t\tlet dInputs = zeros(this.model[layer][0].inputs.length);\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tthis.model[layer][neuron].backward(dValues[neuron], this.dReLU);\n\t\t\t\tdInputs = add(dInputs, this.model[layer][neuron].dInputs);\n\t\t\t}\n\t\t\tdValues = dInputs; //we transfer the dInputs into dValues for the next layer back\n\t\t}\n\t}\n\t/* \n\t\tPurpose: to update all the weights using gradient descent\n\t\t@param lr: learning rate\n\t*/\n\tupdate(lr) {\n\t\t/* First create the gradient descent */\n\t\tconst gd = (weight, lr, dweight) => weight - lr * dweight;\n\t\t/* Iterate over the model */\n\t\tfor (let layer = 0; layer < this.model.length; layer++) {\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\ti < this.model[layer][neuron].dWeights.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tconst newWeights = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].weights[i],\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dWeights[i]\n\t\t\t\t\t);\n\t\t\t\t\tconst newBias = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].bias,\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dBias\n\t\t\t\t\t);\n\n\t\t\t\t\t/* Formally update the model weights */\n\t\t\t\t\tthis.model[layer][neuron].weights[i] = newWeights;\n\t\t\t\t\tthis.model[layer][neuron].bias = newBias;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/* \n\t\tTo throttle each number up and down for visualizations\t\n\t*/\n\t//throttleForward(neuron, layer, change, label) {\n\t///* First Change the value of the output of this neuron */\n\t//const calcChange = this.model[layer][neuron].output + change;\n\t//this.model[layer][neuron].output = calcChange;\n\n\t///* First construct the inputs for the next layer which is made out of the new outputs */\n\t//let inputs = [];\n\t//for (let n = 0; n < this.model[layer].length; n++) {\n\t//inputs.push(this.model[layer][n].output);\n\t//}\n\n\t//const lastLayer = this.model.length;\n\t//for (let l = layer + 1; l < lastLayer - 1; l++) {\n\t///* Then iterate through each neuron in the layer */\n\t//let outputs = [];\n\t//for (let n = 0; n < this.model[l].length; n++) {\n\t///* Then feed forward each individual neuron and push to output array */\n\t//this.model[l][n].forward(inputs, this.ReLU);\n\t//outputs.push(this.model[l][n].output);\n\t//}\n\n\t///* Then outputs will be the inputs for the next layer */\n\t//inputs = outputs;\n\t//}\n\t//this.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t//this.yhat = this.model[lastLayer - 1][0].output;\n\t//this.loss.forward(this.yhat, label);\n\t//}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tExports some tools that make it easier to deal with the data\n*/\n\n/* \n\tPurpose: format the weight array given from tensorflow\n\t@param uweights (unformatted weights), shape\n\t@return layer (formated weights per layer)\n*/\nexport function formatWeightArray(uweights, shape) {\n\tlet layer = [];\n\t/* Increment over each layer l */\n\tfor (let l = 0; l < uweights.length; l++) {\n\t\t/* First num in shape is input neuron which is why we skip here by adding 1 */\n\t\tlet increment = shape[l + 1];\n\t\tlet weightSet = [];\n\t\t/* Increment over each neuron */\n\t\tfor (let t = 0; t < increment; t++) {\n\t\t\tlet weights = [];\n\t\t\t/* Increment over each weight per neuron */\n\t\t\tfor (let w = t; w < uweights[l].length; w += increment) {\n\t\t\t\tweights.push(uweights[l][w]);\n\t\t\t}\n\t\t\tweightSet.push(weights);\n\t\t}\n\t\tlayer.push(weightSet);\n\t}\n\treturn layer;\n}\n\n/* \n\tPurpose: to turn a 2d array into the same array but fixed to a certian number of numbers/figures\n\t@param arr  (not fixed array), fixed\n\t@return arr (fixed array)\n*/\nexport function toFunc2DArray(arr, fixed) {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tfor (let e = 0; e < arr[i].length; e++) {\n\t\t\tarr[i][e] = +arr[i][e].toFixed(fixed);\n\t\t}\n\t}\n\treturn arr;\n}\n\n/* \n\tPurpose: Flattens the array\n\t@param array\n\t@return flattenedArray\n*/\nexport function flatten(array) {\n\tlet flattendArray = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\tflattendArray.push(array[i][e]);\n\t\t}\n\t}\n\treturn flattendArray;\n}\n\n/* \n\tPurpose: generate random integer from 0 to given paramter\n\t@param max\n\t@return Number [0,max)\n*/\nexport function getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\n/* \n\tPurpose: turn tensor to array\n\t@param tensor \n\t@return array\n*/\nexport function tensorToArray(tensor) {\n\treturn Array.from(tensor.dataSync());\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file generates the drawing parts of the nerual network\n*/\nimport * as d3 from \"d3\";\n\n/* \n\tGenerate d3 linear scales for x and y\t\n\t@return {xScale, yScale}\n*/\nexport function generateLinearScale(x, y) {\n\tconst xScale = d3.scaleLinear().domain(x.domain).range(x.range);\n\tconst yScale = d3.scaleLinear().domain(y.domain).range(y.range);\n\treturn { xScale, yScale };\n}\n\n/* \n\tGenerate Bezier Curved Links\n\t@return d3 link\n*/\nexport function generateLink(adjustment) {\n\treturn d3\n\t\t.linkHorizontal()\n\t\t.x((d) => d.x + adjustment)\n\t\t.y((d) => d.y + adjustment);\n}\n\n/* \n\tGenerate the rectangles for neuron placement\n\t@return  shapedNeurons\n*/\nexport function generateNeuronPlacement(\n\tshape,\n\tlayerProportion,\n\tsquareWidth,\n\tstartNeuron,\n\tstopNeuron,\n\txScale,\n\tyScale\n) {\n\tlet shapedNeurons = [];\n\tshapedNeurons.push([startNeuron]);\n\n\tfor (let layer = 1; layer < shape.length - 1; layer++) {\n\t\tlet dense = [];\n\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\tconst coordinate = {\n\t\t\t\tx: xScale(layerProportion[layer]) - squareWidth / 2,\n\t\t\t\ty: yScale(92 - neuron * 12) - squareWidth / 2,\n\t\t\t};\n\t\t\t// push to arrays\n\t\t\tdense.push(coordinate);\n\t\t}\n\t\tshapedNeurons.push(dense);\n\t}\n\n\tshapedNeurons.push([stopNeuron]);\n\n\treturn shapedNeurons;\n}\n\n/* \n\tGenerate the placement of links relative to neurons\n\t@return layerLinks\n*/\nexport function generateLinksPlacement(shape, shapedNeurons, linksGenerator) {\n\t/* We start to iterate over ns */\n\tlet perLink = [];\n\tlet layerLinks = [];\n\tlet neuronLinks = [];\n\tfor (let layer = 1; layer < shape.length; layer++) {\n\t\tneuronLinks = [];\n\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\tperLink = [];\n\t\t\tfor (\n\t\t\t\tlet nextNeuron = 0;\n\t\t\t\tnextNeuron < shape[layer - 1];\n\t\t\t\tnextNeuron++\n\t\t\t) {\n\t\t\t\tperLink.push(\n\t\t\t\t\tlinksGenerator({\n\t\t\t\t\t\tsource: shapedNeurons[layer - 1][nextNeuron],\n\t\t\t\t\t\ttarget: shapedNeurons[layer][neuron],\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tneuronLinks.push(perLink);\n\t\t}\n\t\tlayerLinks.push(neuronLinks);\n\t}\n\n\treturn layerLinks;\n}\n","/* \n  @author: Donny Bertucci: xnought\n  Summary: \n\tMainTool.js is the main controller of all logic of the backprop explainer\n*/\n\nimport React, { Component } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport AnimatedNumber from \"animated-number-react\";\nimport {\n\tNeuralNetworkComponent,\n\tScatterPlot,\n\tLoss,\n\tAnimatedScatterPlot,\n\tSummary,\n} from \"../../exports\";\nimport {\n\tTypography,\n\tBox,\n\tCard,\n\tCardContent,\n\tIconButton,\n\tCardActions,\n\tChip,\n\tButton,\n\tFab,\n\tTooltip,\n\tDialog,\n\tDialogContent,\n\tDialogActions,\n} from \"@material-ui/core\";\nimport {\n\tReplay,\n\tFastForward,\n\tPlayArrow,\n\tStop,\n\tHelp,\n\tClose,\n\tArrowBackIos,\n} from \"@material-ui/icons\";\nimport singleSummarySVG from \"./assets/singleSummary.svg\";\nimport epochModePNG from \"./assets/epochMode.png\";\nimport keySVG from \"./assets/key.svg\";\nimport { NeuralNetwork, tools } from \"../../../nnMiniLibrary/exports\";\nimport { draw } from \"../../../Utils/exports\";\n\nclass BackpropExplainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t/* State for NN */\n\t\t\ttensorFlowNN: null,\n\t\t\tminiNN: null,\n\t\t\tX: [],\n\t\t\ty: [],\n\t\t\tyhat: [],\n\t\t\tshape: [1, 8, 8, 8, 1],\n\t\t\tlr: 0.001,\n\t\t\tepoch: 0,\n\t\t\tcpyEpoch: 0,\n\n\t\t\tbiasesData: [],\n\t\t\tweightsData: [],\n\t\t\tlossArray: [],\n\t\t\tloss: null,\n\t\t\tscale: 5,\n\n\t\t\tshapedWeights: [],\n\t\t\tshapedRects: [],\n\t\t\tshapedLinks: [],\n\n\t\t\tdirection: \"edgePaused\",\n\t\t\tcurve: \"sin\",\n\n\t\t\t/* State for Components */\n\t\t\tcontrols: {\n\t\t\t\tplaying: false,\n\t\t\t\tspeed: 100,\n\t\t\t},\n\n\t\t\tmode: false,\n\t\t\tstopRender: false,\n\t\t\tkeyFrameLayer: 0,\n\t\t\tkeyFrameLoss: 0,\n\t\t\tkeyFrameScatter: 0,\n\t\t\tsubEpoch: \"\",\n\t\t\tisAnimating: false,\n\t\t\tlossSavings: 0,\n\t\t\tlossDifference: 0,\n\t\t\tsingleInputExample: 0,\n\t\t\tsingleLabelExample: 0,\n\t\t\tnewOutput: 0,\n\n\t\t\t/* Dialog showing */\n\t\t\tcontrolCenterHelp: false,\n\t\t\tcustomizationHelp: false,\n\t\t\tneuralNetworkHelp: false,\n\t\t\tlossChange: 0,\n\t\t\tpotentialYhat: [],\n\t\t\tsingleInputIndex: -1,\n\t\t\tshouldNotRender: false,\n\t\t\tstatus: \"reset\",\n\t\t\tzoom: 1,\n\t\t};\n\n\t\tthis.initNeuralNetwork = this.initNeuralNetwork.bind(this);\n\t\tthis.run = this.run.bind(this);\n\t\tthis.genTensorData = this.genTensorData.bind(this);\n\t\tthis.mutate = this.mutate.bind(this);\n\t\tthis.train = this.train.bind(this);\n\t\tthis.printParameters = this.printParameters.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t\tthis.resetParameters = this.resetParameters.bind(this);\n\t\tthis.asyncPause = this.asyncPause.bind(this);\n\t\tthis.changeModelLr = this.changeModelLr.bind(this);\n\t\tthis.anim = this.anim.bind(this);\n\t\tthis.randExampleEpoch = this.randExampleEpoch.bind(this);\n\t}\n\t/* \n\t\tEntire Neural network process along with random generation of single training\t\t\n\t\texample.\n\t*/\n\trandExampleEpoch(X, y, weightsData, biasesData, shape, lr) {\n\t\tconst randomInput = tools.getRandomInt(this.state.X.length);\n\t\tconst singleInputExample = X[randomInput];\n\t\tconst singleLabelExample = y[randomInput];\n\n\t\tlet formattedWeights = tools.formatWeightArray(weightsData, shape);\n\t\tlet nn = new NeuralNetwork(shape, formattedWeights, biasesData);\n\t\tlet clone = new NeuralNetwork(shape, formattedWeights, biasesData);\n\n\t\t/* This is the actual neural network changes in animation */\n\t\tnn.forward(singleInputExample, singleLabelExample);\n\t\tnn.backward();\n\n\t\t/* This is the clone that goes one more forward to get the projected changes */\n\t\tclone.forward(singleInputExample, singleLabelExample);\n\t\tclone.backward();\n\t\tclone.update(lr);\n\t\tclone.forward(singleInputExample, singleLabelExample);\n\n\t\t/* Store outputs to variables */\n\t\tconst newOutput = clone.yhat;\n\t\tconst updatedLoss = clone.loss.output;\n\t\tconst lossSavings = updatedLoss;\n\t\tconst lossDifference = nn.loss.output - updatedLoss;\n\n\t\t/* computes the predictions for all values form the copy */\n\t\tconst forwardAll = (inputArray) => {\n\t\t\t/* Here we return an array of all the inputs fed forward */\n\t\t\tconst inputArrayLength = inputArray.length;\n\t\t\tlet outputArray = new Array(inputArrayLength);\n\n\t\t\tfor (let i = 0; i < inputArrayLength; i++) {\n\t\t\t\tclone.forward(inputArray[i], 0); //we dont care about loss here so the input label doesnt matter\n\t\t\t\toutputArray[i] = clone.yhat; //store all outputs to the outputArray\n\t\t\t}\n\n\t\t\treturn outputArray; //return the output array to be used elsewhere\n\t\t};\n\t\tconst potential = forwardAll(X);\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tminiNN: nn,\n\t\t\tpotentialYhat: potential,\n\t\t\tmode: true,\n\t\t\tlossSavings,\n\t\t\tlossDifference,\n\t\t\tsingleInputIndex: randomInput,\n\t\t\tsingleInputExample,\n\t\t\tsingleLabelExample,\n\t\t\tnewOutput,\n\t\t\tcontrols: {\n\t\t\t\t...this.state.controls,\n\t\t\t\tplaying: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t/*\n\t\tControls the logic of the animation: keyframe animations controller\t\n\t*/\n\tasync anim() {\n\t\tconst { shape } = this.state;\n\t\tconst speed = 750;\n\t\t/* All anim needs to know is the shape */\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\n\t\t/* animate the forward pass */\n\t\tthis.setState({\n\t\t\tsubEpoch: \"forward\",\n\t\t\tstatus: \"reset\",\n\t\t\tisAnimating: true,\n\t\t\tlossChange: 0,\n\t\t\tcpyEpoch: this.state.epoch,\n\t\t\tkeyFrameScatter: 0,\n\t\t});\n\t\tfor (let i = 0; i < shape.length; i++) {\n\t\t\tthis.setState({ keyFrameLayer: i });\n\t\t\tif (i === shape.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tawait timer(speed);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tkeyFrameLoss: 1,\n\t\t\tkeyFrameScatter: 1,\n\t\t\tstatus: \"real\",\n\t\t\tshouldNotRender: true,\n\t\t});\n\n\t\tawait timer(speed);\n\t\tthis.setState({ keyFrameLoss: 2, shouldNotRender: true });\n\t\tawait timer(speed);\n\t\tthis.setState({ keyFrameLoss: 3 });\n\n\t\t//we update the losschange\n\t\tthis.setState({\n\t\t\tlossChange: this.state.miniNN.loss.output,\n\t\t});\n\t\tthis.setState({ subEpoch: \"backward\", keyFrameScatter: 2 });\n\n\t\tfor (let i = shape.length - 1; i >= 0; i--) {\n\t\t\tthis.setState({ keyFrameLayer: i });\n\t\t\tawait timer(speed);\n\t\t}\n\t\tthis.setState({ keyFrameLayer: -1 });\n\n\t\tawait timer(speed);\n\t\tthis.setState({ subEpoch: \"transition\" });\n\n\t\tawait timer(1000);\n\t\tthis.setState({ subEpoch: \"update\", shouldNotRender: false });\n\t\tawait timer(1000);\n\t\t//we update the new loss\n\t\tthis.setState({\n\t\t\tisAnimating: false,\n\t\t\tlossChange: this.state.lossSavings,\n\t\t\tkeyFrameScatter: 4,\n\t\t\tcpyEpoch: this.state.cpyEpoch + 1,\n\t\t\tstatus: \"pred\",\n\t\t});\n\t}\n\n\t/* \n\t\tinitialize the data for drawing the entire neural network\n\t\t@param shape\t\n\t*/\n\tinitNeuralNetwork(shape) {\n\t\tconst { controls } = this.state;\n\t\tconst { playing } = controls;\n\n\t\t// If we are not training the tensorflow neural network\n\t\tif (!playing) {\n\t\t\t/* START SETUP */\n\t\t\tconst squareWidth = 32;\n\t\t\tconst xConstraints = { domain: [0, 100], range: [50, 750] };\n\t\t\tconst yConstraints = { domain: [0, 100], range: [500, 0] };\n\t\t\t//prettier-ignore\n\t\t\tconst {xScale, yScale} = draw.generateLinearScale(xConstraints,yConstraints);\n\t\t\t// Create the starting point and the stopping point for the neural network\n\t\t\tconst start = { x: 71 - squareWidth / 2, y: 250 - squareWidth / 2 };\n\t\t\tconst stop = { x: 750 - squareWidth / 2, y: 250 - squareWidth / 2 };\n\t\t\t// generate function to create paths from (x,y) to (x,y)\n\t\t\tconst linksGenerator = draw.generateLink(squareWidth / 2);\n\t\t\t// how the layers are proptioned compared to the linear scale\n\t\t\tconst layerProportion = [0, 25, 50, 75, 0];\n\t\t\t/* END SETUP */\n\n\t\t\t/* START GENERATING THE GRAPH */\n\t\t\tconst shapedNeurons = draw.generateNeuronPlacement(\n\t\t\t\tshape,\n\t\t\t\tlayerProportion,\n\t\t\t\tsquareWidth,\n\t\t\t\tstart,\n\t\t\t\tstop,\n\t\t\t\txScale,\n\t\t\t\tyScale\n\t\t\t);\n\t\t\tconst layerLinks = draw.generateLinksPlacement(\n\t\t\t\tshape,\n\t\t\t\tshapedNeurons,\n\t\t\t\tlinksGenerator\n\t\t\t);\n\t\t\t/* END GENERATING THE GRAPH */\n\n\t\t\tshapedNeurons.splice(0, 1); //in order for it to be lined up with the nn model\n\t\t\t//update the state of the links and rectangles to be rendered\n\t\t\tthis.setState({\n\t\t\t\tshapedLinks: layerLinks,\n\t\t\t\tshapedRects: shapedNeurons,\n\t\t\t});\n\t\t} else if (playing) {\n\t\t\tconst { weightsData, shape } = this.state;\n\t\t\t//update the weights to be rendered\n\t\t\tconst shapedWeights = tools.formatWeightArray(weightsData, shape);\n\t\t\tthis.setState({ shapedWeights });\n\t\t}\n\t}\n\n\t/* \n\t\tchanges the curent learning rate, tidy in case of memory leak here\t\n\t\t@param lrChange\n\t*/\n\tchangeModelLr(lrChange) {\n\t\ttf.tidy(() => {\n\t\t\tthis.setState({ lr: lrChange });\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t/* \n\t\truns the training and switches the playing the reflect playing\t\n\t*/\n\tasync run() {\n\t\tconst playing = !this.state.controls.playing;\n\t\tthis.mutate(\"controls\", \"playing\", playing);\n\t\tif (playing === true) {\n\t\t\tawait this.train(this.state.X, this.state.y);\n\t\t}\n\t}\n\n\t/* \n\t\tmutate helper method\t\n\t\t@TODO remove this from the program\t\n\t*/\n\tmutate(key, subkey, value) {\n\t\t/* copy of the state */\n\t\ttf.tidy(() => {\n\t\t\tlet state = { ...this.state };\n\t\t\t/* If this.state.key.subkey exists */\n\t\t\tif (key in state && subkey in state[key]) {\n\t\t\t\t/* Mutate the state */\n\t\t\t\tstate[key][subkey] = value;\n\t\t\t\tthis.setState({ state });\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Could not be found in state\");\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t/* \n\t\tadds configurations to sequential model\n\t\t@param model : tfjs sequential \n\t*/\n\taddModel(model) {\n\t\treturn tf.tidy(() => {\n\t\t\tlet shape = this.state.shape;\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tinputShape: [1],\n\t\t\t\t\tunits: shape[1],\n\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\t\t\tfor (let layer = 2; layer < shape.length - 1; layer++) {\n\t\t\t\tmodel.add(\n\t\t\t\t\ttf.layers.dense({\n\t\t\t\t\t\tunits: shape[layer],\n\t\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\t\tuseBias: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tunits: 1,\n\t\t\t\t\tactivation: \"linear\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn model;\n\t\t});\n\t}\n\n\t/* \n\t\tcompiles the model with learning rate given\t\n\t\t@lr : learning rate\t\n\t*/\n\tmodelCompile(lr) {\n\t\tlet model = tf.sequential();\n\t\tthis.addModel(model);\n\t\tmodel.compile({\n\t\t\toptimizer: tf.train.sgd(lr),\n\t\t\tloss: \"meanSquaredError\",\n\t\t});\n\t\treturn model;\n\t}\n\n\t/* \n\t\ttrains the model on one epoch and one input\n\t\t@param X, y\n\t*/\n\tasync train(X, y) {\n\t\t/* START SETUP */\n\t\tconst XTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(X);\n\t\t});\n\t\tconst yTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(y);\n\t\t});\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.state.tensorFlowNN;\n\t\t});\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\t/* START SETUP */\n\n\t\t///* Until broken by user */\n\t\tlet play = this.state.controls.playing;\n\t\t////let epoch = 0;\n\t\twhile (play !== false) {\n\t\t\tthis.setState({ stopRender: true });\n\t\t\tconst { playing, speed } = this.state.controls;\n\t\t\tplay = playing;\n\t\t\tawait model.fit(XTensor, yTensor, {\n\t\t\t\tepochs: 1,\n\t\t\t\tbatchSize: 1,\n\t\t\t});\n\t\t\ttf.tidy(() => {\n\t\t\t\tlet yhatTensor = model.predict(XTensor);\n\t\t\t\tlet yhat = tools.tensorToArray(yhatTensor);\n\t\t\t\tlet loss = tf.losses.meanSquaredError(y, yhat).dataSync()[0];\n\t\t\t\tthis.printParameters(model, loss, yhat, this.state.epoch + 1);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tthis.setState({ stopRender: false });\n\t\t\tawait timer(speed);\n\t\t}\n\t\tthis.setState({ tensorFlowNN: model });\n\t\ttf.dispose(XTensor);\n\t\ttf.dispose(yTensor);\n\t}\n\n\t/* \n\t\tgenerate the data in tensor form \t\n\t\t@param eqn, scaled, volume\t\n\t*/\n\tasync genTensorData(eqn, scaled, volume) {\n\t\tawait tf.ready();\n\t\ttf.tidy(() => {\n\t\t\tconst XTensor = tf.linspace(\n\t\t\t\t-this.state.scale,\n\t\t\t\tthis.state.scale,\n\t\t\t\tvolume\n\t\t\t);\n\t\t\tconst yTensor = tf.mul(eqn(XTensor), scaled);\n\t\t\tconst yhatTensor = tf.zerosLike(XTensor);\n\t\t\tconst X = tools.tensorToArray(XTensor);\n\t\t\tconst y = tools.tensorToArray(yTensor);\n\t\t\tconst yhat = tools.tensorToArray(yhatTensor);\n\n\t\t\tthis.setState({\n\t\t\t\tX,\n\t\t\t\ty,\n\t\t\t\tyhat,\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t/* \n\t\tformats and updates the state for bias and weights from tfjs model \n\t\tin an effort to eventually print them / use them for svg\n\t\t@param model, loss, yhat, epoch\t\n\t*/\n\tprintParameters(model, loss, yhat, epoch) {\n\t\tlet weightsData = [];\n\t\tlet biasesData = [];\n\t\tfor (let i = 0; i < model.getWeights().length; i++) {\n\t\t\t(i % 2 === 0 ? weightsData : biasesData).push(\n\t\t\t\tArray.from(model.getWeights()[i].dataSync())\n\t\t\t);\n\t\t}\n\t\tconst lossArray = [...this.state.lossArray, loss];\n\t\tthis.setState({\n\t\t\tbiasesData,\n\t\t\tweightsData,\n\t\t\tloss,\n\t\t\tyhat,\n\t\t\tepoch,\n\t\t\tlossArray,\n\t\t});\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t}\n\n\t/* \n\t\tsimply to pause\n\t*/\n\tasync asyncPause() {\n\t\tthis.setState({ controls: { ...this.state.controls, playing: false } });\n\t}\n\n\t/* \n\t\tresets all the parameters\n\t\t@param scale\t\n\t*/\n\tasync resetParameters(scale) {\n\t\ttf.dispose(this.state.tensorFlowNN);\n\t\tconst { curve } = this.state;\n\t\tlet eqn;\n\t\tlet optimizer;\n\t\ttf.tidy(() => {\n\t\t\tif (curve === \"sin\") {\n\t\t\t\teqn = tf.sin;\n\t\t\t} else if (curve === \"tanh\") {\n\t\t\t\teqn = tf.tanh;\n\t\t\t} else if (curve === \"cos\") {\n\t\t\t\teqn = tf.cos;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t\tawait this.genTensorData(eqn, scale, 50);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tthis.setState({\n\t\t\tepoch: 0,\n\t\t\tloss: null,\n\t\t\tminiNN: null,\n\t\t\ttensorFlowNN: model,\n\t\t\tshapedWeights: [],\n\t\t\tlossArray: [],\n\t\t});\n\t\ttf.dispose(optimizer);\n\t}\n\n\t/* \n\t\tfull reset\t\n\t\tresets the paramters and pauses \n\t*/\n\tasync reset(scale) {\n\t\tthis.asyncPause();\n\t\tthis.resetParameters(scale);\n\t}\n\n\t/* \n\t\tused a linear equation to get the zoom for the svg\n\t\t@param clientWidth\n\t\t@TODO figure out how to do this more dynamically\t\n\t*/\n\tcorrectZoom(width) {\n\t\tconst zoomFactor = (1 - 0.75) / (1387 - 913);\n\t\tconst zoomShift = 0.75 - zoomFactor * 913;\n\t\tconst zoom = Math.min(1, zoomFactor * width + zoomShift - 0.2);\n\t\treturn zoom;\n\t}\n\n\tasync componentDidMount() {\n\t\t/* initialize the everything on mount */\n\t\ttf.setBackend(\"cpu\"); //for some reason webgl not working on safari\n\t\tthis.genTensorData(tf.sin, this.state.scale, 50);\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tconst width = document.body.clientWidth;\n\t\tconst zoom = this.correctZoom(width);\n\t\tthis.setState({ tensorFlowNN: model, zoom });\n\t}\n\tshouldComponentUpdate() {\n\t\tif (this.state.stopRender) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\trender() {\n\t\t/* Destructure State*/\n\t\tconst {\n\t\t\tX,\n\t\t\ty,\n\t\t\tshape,\n\t\t\tscale,\n\t\t\tminiNN,\n\t\t\tweightsData,\n\t\t\tbiasesData,\n\t\t\tyhat,\n\t\t\tmode,\n\t\t\tepoch,\n\t\t\tcurve,\n\t\t\tlr,\n\t\t\tloss,\n\t\t\tcontrols,\n\t\t\tshapedWeights,\n\t\t\tshapedLinks,\n\t\t\tshapedRects,\n\t\t\tkeyFrameLayer,\n\t\t\tkeyFrameLoss,\n\t\t\tsubEpoch,\n\t\t\tisAnimating,\n\t\t\tsingleInputExample,\n\t\t\tsingleLabelExample,\n\t\t\tlossSavings,\n\t\t\tcontrolCenterHelp,\n\t\t\tcustomizationHelp,\n\t\t\tneuralNetworkHelp,\n\t\t\tlossChange,\n\t\t\tkeyFrameScatter,\n\t\t\tzoom,\n\t\t} = this.state;\n\t\tconst { playing, speed } = controls;\n\n\t\tconst lrs = [0.0001, 0.001, 0.003, 0.005];\n\t\tconst dataSets = [\n\t\t\t{ label: \"sin\", eqn: tf.sin, scale: 5 },\n\t\t\t{ label: \"cos\", eqn: tf.cos, scale: 5 },\n\t\t\t{ label: \"tanh\", eqn: tf.tanh, scale: 5 },\n\t\t];\n\n\t\t/* Destructure render */\n\t\tconst PlayButtonClick = (\n\t\t\t// eslint-disable-next-line\n\t\t\t<Fab\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: !this.state.controls.playing\n\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t}}\n\t\t\t\tdisableTouchRipple\n\t\t\t\tonClick={() => this.run()}\n\t\t\t>\n\t\t\t\t{!playing ? <PlayArrow /> : <Stop />}\n\t\t\t</Fab>\n\t\t);\n\t\tconst controlsReg = (\n\t\t\t<CardActions>\n\t\t\t\t<Tooltip title=\"reset\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Replay />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t{PlayButtonClick}\n\t\t\t\t<Tooltip title=\"speed up\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: speed === 0 ? \"#FFC006\" : \"grey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t...controls,\n\t\t\t\t\t\t\t\t\tspeed: speed === 0 ? 100 : 0,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FastForward />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</CardActions>\n\t\t);\n\t\tconst controlsBackProp = (\n\t\t\t<Box marginTop={2}>\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isAnimating}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: isAnimating ? \"lightgrey\" : \"black\",\n\n\t\t\t\t\t\t\tborderColor: isAnimating ? \"lightgrey\" : \"black\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\tREPLAY\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tthis.randExampleEpoch(\n\t\t\t\t\t\t\t\tX,\n\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\tbiasesData,\n\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\tlr,\n\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: isAnimating ? \"lightgrey\" : \"#4BA3C3\",\n\t\t\t\t\t\t\tborderColor: isAnimating ? \"lightgrey\" : \"#4BA3C3\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isAnimating}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\tNew Training Example\n\t\t\t\t\t</Button>\n\t\t\t\t</CardActions>\n\t\t\t</Box>\n\t\t);\n\t\tconst controlCenter = (\n\t\t\t<Box width={400} marginLeft={10}>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\"Control Center\"}\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tstyle={{ color: \"orange\" }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ controlCenterHelp: true });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Help />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div></div>\n\n\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\tEPOCH: {mode ? this.state.cpyEpoch : epoch}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t{mode ? (\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPhase:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"forward\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tForward\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"backward\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBackward\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"update\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{loss == null || mode\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: `Loss: ${loss.toPrecision(6)}`}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ color: \"#4BA3C3\" }}>\n\t\t\t\t\t\t\t{mode\n\t\t\t\t\t\t\t\t? `Training Example: (${singleInputExample.toPrecision(\n\t\t\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t\t  )}, ${singleLabelExample.toPrecision(3)})`\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\tkeyFrameScatter < 3 ? \"black\" : \"orangered\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{mode && lossChange !== 0\n\t\t\t\t\t\t\t\t? keyFrameScatter < 3\n\t\t\t\t\t\t\t\t\t? \"loss: \"\n\t\t\t\t\t\t\t\t\t: \"new loss: \"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t{mode && lossChange !== 0 ? (\n\t\t\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\t\t\tvalue={lossChange}\n\t\t\t\t\t\t\t\t\tformatValue={(value) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toPrecision(6)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tduration={750}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: \"grey\" }} variant=\"caption\">\n\t\t\t\t\t\t\t{keyFrameScatter > 3 && mode\n\t\t\t\t\t\t\t\t? \"loss decrease: \"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t{keyFrameScatter > 3 && mode ? (\n\t\t\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\t\t\tvalue={this.state.lossDifference}\n\t\t\t\t\t\t\t\t\tformatValue={(value) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toPrecision(6)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tduration={750}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t{mode ? controlsBackProp : controlsReg}\n\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t{loss == null || isAnimating ? (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tif (mode) {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tsubEpoch: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tmode: !mode,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.run();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis.randExampleEpoch(\n\t\t\t\t\t\t\t\t\t\t\t\tX,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\t\t\t\t\tbiasesData,\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tlr,\n\t\t\t\t\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{mode ? <ArrowBackIos /> : \"\"}\n\t\t\t\t\t\t\t\t\t{mode\n\t\t\t\t\t\t\t\t\t\t? \"go back to fitting\"\n\t\t\t\t\t\t\t\t\t\t: `Click to Animate epoch ${epoch}`}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t<Box marginTop={5}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\"Customization\"}\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"orange\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tcustomizationHelp: true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Help />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tLearning Rate\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{lrs.map((num, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={`${num}`}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num ? \"white\" : \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.changeModelLr(num);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tData Set\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{dataSets.map((item, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tcurve: item.label,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.genTensorData(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.eqn,\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.scale,\n\t\t\t\t\t\t\t\t\t\t\t\t\t50\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">Layer</Typography>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tif (a.length < 5) {\n\t\t\t\t\t\t\t\t\t\t\ta[a.length - 1] = 8;\n\t\t\t\t\t\t\t\t\t\t\ta.push(1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tif (a.length > 3) {\n\t\t\t\t\t\t\t\t\t\t\ta.splice(a.length - 2, 1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t–\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst scatter = (\n\t\t\t<Box marginLeft={10}>\n\t\t\t\t<Box>\n\t\t\t\t\t{mode ? (\n\t\t\t\t\t\t<AnimatedScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\t\tX={X}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t\t\tpotential={this.state.potentialYhat}\n\t\t\t\t\t\t\tid={2}\n\t\t\t\t\t\t\tselect={this.state.singleInputIndex}\n\t\t\t\t\t\t\ttimes={this.state.keyFrameScatter}\n\t\t\t\t\t\t\tshouldNotRender={this.state.shouldNotRender}\n\t\t\t\t\t\t\tstatus={this.state.status}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\t\tX={X}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t\t\tid={1}\n\t\t\t\t\t\t\tduration={200}\n\t\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t\t<Box marginTop={10}>\n\t\t\t\t\t<Loss lossArray={this.state.lossArray} duration={100} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst neuralNetwork = (\n\t\t\t<Box>\n\t\t\t\t<NeuralNetworkComponent\n\t\t\t\t\tminiNN={miniNN}\n\t\t\t\t\tinput={singleInputExample}\n\t\t\t\t\tlabel={singleLabelExample}\n\t\t\t\t\tshapedWeights={shapedWeights}\n\t\t\t\t\tshapedLinks={shapedLinks}\n\t\t\t\t\tshapedRects={shapedRects}\n\t\t\t\t\tshape={shape}\n\t\t\t\t\tbiases={biasesData}\n\t\t\t\t\tplaying={\n\t\t\t\t\t\tplaying\n\t\t\t\t\t\t\t? speed === 0\n\t\t\t\t\t\t\t\t? \"edgeForward\"\n\t\t\t\t\t\t\t\t: \"edgeSlowed\"\n\t\t\t\t\t\t\t: \"edgePaused\"\n\t\t\t\t\t}\n\t\t\t\t\tshow={playing}\n\t\t\t\t\tmode={mode}\n\t\t\t\t\tbackward={this.state.direction}\n\t\t\t\t\tkeyFrameLayer={keyFrameLayer}\n\t\t\t\t\tkeyFrameLoss={keyFrameLoss}\n\t\t\t\t\tsubEpoch={subEpoch}\n\t\t\t\t\tlossSavings={lossSavings}\n\t\t\t\t\tisAnimating={isAnimating}\n\t\t\t\t\tlr={lr}\n\t\t\t\t></NeuralNetworkComponent>\n\t\t\t\t<IconButton\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: \"500px\",\n\t\t\t\t\t\tleft: \"100px\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tneuralNetworkHelp: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Help />\n\t\t\t\t</IconButton>\n\t\t\t</Box>\n\t\t);\n\n\t\tconst dialogs = (\n\t\t\t<div>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={controlCenterHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ controlCenterHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={1}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t<b>Getting Stuck?</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tPress{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayArrow fontSize=\"small\" />\n\t\t\t\t\t\t\t\t\t\t\t</Fab>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\tto start training and fitting the\n\t\t\t\t\t\t\t\t\t\t\tcurve to the data\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tThen press{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tClick to animate epoch #\n\t\t\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\tto see forward propagation,{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<b>backward propagation</b>, and\n\t\t\t\t\t\t\t\t\t\t\tupdate animation at the epoch #.\n\t\t\t\t\t\t\t\t\t\t\tWhile in this mode, you will have\n\t\t\t\t\t\t\t\t\t\t\taccess to the control center{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<b>below</b>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"epochMode\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={epochModePNG}\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tTo go back to training and fitting\n\t\t\t\t\t\t\t\t\t\t\tthe curve to the data click{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<ArrowBackIos /> Go back to\n\t\t\t\t\t\t\t\t\t\t\t\tfitting\n\t\t\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={customizationHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ customizationHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t<b>What you can't and can change</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Fixed</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tBy default, this Neural Network stays fixed\n\t\t\t\t\t\t\t\t\twith\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tone input neuron, at least one\n\t\t\t\t\t\t\t\t\t\t\thidden layer of eight ReLU neurons,\n\t\t\t\t\t\t\t\t\t\t\tand an output layer with one linear\n\t\t\t\t\t\t\t\t\t\t\tneuron.\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tStochastic Gradient Descent (one\n\t\t\t\t\t\t\t\t\t\t\ttraining example per epoch)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Variable</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tYou have the ability to change\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tLearning Rate (0.0001, 0.001, 0.003,\n\t\t\t\t\t\t\t\t\t\t\tor 0.005)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tData set (sine wave, cosine wave, or\n\t\t\t\t\t\t\t\t\t\t\ttanh curve)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tHidden layer neurons (min 1 and max\n\t\t\t\t\t\t\t\t\t\t\t3)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#FAFAFA\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={neuralNetworkHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ neuralNetworkHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<img src={Summary} alt=\"summary\" width=\"400\" />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Neural Network</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tEach square is a neuron in the neural\n\t\t\t\t\t\t\t\t\tnetwork. To see what activation function the\n\t\t\t\t\t\t\t\t\tneuron has, check the key located right\n\t\t\t\t\t\t\t\t\tabove the neural network.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={singleSummarySVG}\n\t\t\t\t\t\t\talt=\"singleSummary\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Single EPOCH mode</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tDuring a single epoch after clicking{\" \"}\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClick to animate epoch #\n\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t, each arrow will represent the direction to\n\t\t\t\t\t\t\t\t\tnudge the output to lower loss.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tThe fill color shows the activation output,\n\t\t\t\t\t\t\t\t\tbrighter is more active.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div id=\"app\">\n\t\t\t\t<Card\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: \"#FAFAFA\",\n\t\t\t\t\t\toutlineColor: \"white\",\n\t\t\t\t\t\tpaddingBottom: \"1em\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CardContent\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttransform: `scale(${zoom})`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginRight={90}>\n\t\t\t\t\t\t\t\t<img src={keySVG} alt=\"key\"></img>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\t\t\tNeural Trainer\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName=\"regular\"\n\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\tmarginTop={2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{neuralNetwork}\n\t\t\t\t\t\t\t{scatter}\n\t\t\t\t\t\t\t{controlCenter}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t\t{dialogs}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BackpropExplainer;\n","export default __webpack_public_path__ + \"static/media/demo.e2638fef.gif\";","// src/pages/NewPage.js\r\nimport React from 'react';\r\nimport ManualTool from \"../components/implementations/article/ManualTool\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst NewPage = () => (\r\n  <Element name=\"structMan\">\r\n\t\tHello from Qiushi Huang.\r\n\t</Element>\r\n);\r\n\r\nexport default NewPage;\r\n","// src/pages/NewPage.js\r\nimport React from 'react';\r\nimport AutoTool from \"../components/implementations/article/AutoTool\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst AutoFitLinear = () => (\r\n  <Element name=\"structLin\">\r\n\t\t\t\t<AutoTool />\r\n\t\t\t</Element>\r\n);\r\n\r\nexport default AutoFitLinear;\r\n","// src/pages/BackProp.js\r\nimport React from 'react';\r\nimport { BackpropExplainer, Article, Acknowledge, Header, Nav } from \"../components/exports\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst BackProp = () => (\r\n  <Element name=\"mainTool\">\r\n                <BackpropExplainer />\r\n              </Element>\r\n);\r\n\r\nexport default BackProp;\r\n","// src/pages/NewPage.js\r\nimport React from 'react';\r\nimport ManualTool from \"../components/implementations/article/ManualTool\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst ManualFit = () => (\r\n  <Element name=\"structMan\">\r\n\t\t<ManualTool />\r\n\t</Element>\r\n);\r\n\r\nexport default ManualFit;\r\n","import React, { Component } from \"react\";\nimport ReactGa from \"react-ga\";\nimport { createMuiTheme, ThemeProvider, Divider, Box } from \"@material-ui/core\";\nimport { BackpropExplainer, Article, Acknowledge, Header, Nav } from \"./components/exports\";\nimport { Element } from \"react-scroll\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; // Importing v5.x Router\n\n// Example of the new page\nimport NewPage from \"./pages/NewPage\"; // Create this file as the new page\nimport AutoFitLinear from './pages/auto_fit_linear'\nimport BackProp from './pages/backprop'\nimport ManualFit from './pages/manual_fit'\nconst globalWeight = 350;\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTypography: {\n      h1: { fontWeight: globalWeight },\n      h2: { fontWeight: globalWeight },\n      h3: { marginTop: 25, fontWeight: globalWeight },\n      h4: { marginTop: 20, marginBottom: 10, fontWeight: globalWeight },\n      h5: { fontWeight: globalWeight },\n      h6: { fontWeight: globalWeight },\n      body1: { fontWeight: globalWeight },\n      body2: { fontWeight: globalWeight },\n    },\n  },\n});\n\nclass App extends Component {\n  componentDidMount() {\n    ReactGa.initialize(`${process.env.REACT_APP_GAID}`);\n    ReactGa.pageview(\"/\");\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router> {/* Wrap the app in Router */}\n          <div>\n            <br />\n            \n            <Switch> {/* Use Switch to group your routes */}\n              <Route path=\"/\" component={NewPage} />\n              <Route path=\"/newpage\" component={NewPage} /> {/* Define the route for NewPage */}\n              <Route path=\"/auto_fit_linear\" component={AutoFitLinear} />\n              <Route path=\"/backprop\" component={BackProp} />\n              <Route path=\"/manualfit\" component={ManualFit} />\n            </Switch>\n\n            <br />\n          </div>\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL || \"/bp-demo\"}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();"],"sourceRoot":""}